GAS LISTING /tmp/ccHDklfR.s 			page 1


   1               		.file	"tft.cpp"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.stabs	"/home/jiayang/\346\226\207\346\241\243/D4/D4_first ilmatto/libtft-cpp/",100,0,4,.Ltext0
   8               		.stabs	"tft.cpp",100,0,4,.Ltext0
   9               		.text
  10               	.Ltext0:
  11               		.stabs	"gcc2_compiled.",60,0,0,0
  12               		.stabs	"__uint24:t(0,1)=@s24;r(0,1);0;077777777;",128,0,0,0
  13               		.stabs	"__int24:t(0,2)=@s24;r(0,2);040000000;037777777;",128,0,0,0
  14               		.stabs	"__builtin_va_list:t(0,3)=*(0,4)=(0,4)",128,0,0,0
  15               		.stabs	"complex long double:t(0,5)=R3;8;0;",128,0,0,0
  16               		.stabs	"complex double:t(0,6)=R3;8;0;",128,0,0,0
  17               		.stabs	"complex float:t(0,7)=R3;8;0;",128,0,0,0
  18               		.stabs	"complex int:t(0,8)=s4real:(0,9)=r(0,9);-32768;32767;,0,16;imag:(0,9),16,16;;",128,0,0,0
  19               		.stabs	"long long unsigned int:t(0,10)=@s64;r(0,10);0;01777777777777777777777;",128,0,0,0
  20               		.stabs	"long unsigned int:t(0,11)=@s32;r(0,11);0;037777777777;",128,0,0,0
  21               		.stabs	"unsigned int:t(0,12)=r(0,12);0;0177777;",128,0,0,0
  22               		.stabs	"unsigned char:t(0,13)=@s8;r(0,13);0;255;",128,0,0,0
  23               		.stabs	"long long int:t(0,14)=@s64;r(0,14);01000000000000000000000;0777777777777777777777;",128,0,
  24               		.stabs	"long int:t(0,15)=@s32;r(0,15);020000000000;017777777777;",128,0,0,0
  25               		.stabs	"int:t(0,9)",128,0,0,0
  26               		.stabs	"signed char:t(0,16)=@s8;r(0,16);-128;127;",128,0,0,0
  27               		.stabs	"char:t(0,17)=@s8;r(0,17);0;255;",128,0,0,0
  28               		.stabs	"signed:t(0,9)",128,0,0,0
  29               		.stabs	"unsigned long:t(0,11)",128,0,0,0
  30               		.stabs	"long long unsigned:t(0,10)",128,0,0,0
  31               		.stabs	"short int:t(0,18)=r(0,18);-32768;32767;",128,0,0,0
  32               		.stabs	"short unsigned int:t(0,19)=r(0,19);0;0177777;",128,0,0,0
  33               		.stabs	"unsigned short:t(0,19)",128,0,0,0
  34               		.stabs	"float:t(0,20)=r(0,9);4;0;",128,0,0,0
  35               		.stabs	"double:t(0,21)=r(0,9);4;0;",128,0,0,0
  36               		.stabs	"long double:t(0,22)=r(0,9);4;0;",128,0,0,0
  37               		.stabs	"void:t(0,4)",128,0,0,0
  38               		.stabs	"wchar_t:t(0,23)=r(0,23);-32768;32767;",128,0,0,0
  39               		.stabs	"bool:t(0,24)=@s8;-16;",128,0,0,0
  40               		.stabs	"__vtbl_ptr_type:t(0,25)=*(0,26)=f(0,9)",128,0,0,0
  41               		.stabs	"decltype(nullptr):t(0,27)=(0,27)",128,0,0,0
  42               		.stabs	"int8_t:t(0,28)=(0,16)",128,0,121,0
  43               		.stabs	"uint8_t:t(0,29)=(0,13)",128,0,122,0
  44               		.stabs	"int16_t:t(0,30)=(0,9)",128,0,123,0
  45               		.stabs	"uint16_t:t(0,31)=(0,12)",128,0,124,0
  46               		.stabs	"int32_t:t(0,32)=(0,15)",128,0,125,0
  47               		.stabs	"uint32_t:t(0,33)=(0,11)",128,0,126,0
  48               		.stabs	"int64_t:t(0,34)=(0,14)",128,0,128,0
  49               		.stabs	"uint64_t:t(0,35)=(0,10)",128,0,129,0
  50               		.stabs	"intptr_t:t(0,36)=(0,30)",128,0,142,0
  51               		.stabs	"uintptr_t:t(0,37)=(0,31)",128,0,147,0
  52               		.stabs	"int_least8_t:t(0,38)=(0,28)",128,0,159,0
  53               		.stabs	"uint_least8_t:t(0,39)=(0,29)",128,0,164,0
  54               		.stabs	"int_least16_t:t(0,40)=(0,30)",128,0,169,0
  55               		.stabs	"uint_least16_t:t(0,41)=(0,31)",128,0,174,0
  56               		.stabs	"int_least32_t:t(0,42)=(0,32)",128,0,179,0
  57               		.stabs	"uint_least32_t:t(0,43)=(0,33)",128,0,184,0
GAS LISTING /tmp/ccHDklfR.s 			page 2


  58               		.stabs	"int_least64_t:t(0,44)=(0,34)",128,0,192,0
  59               		.stabs	"uint_least64_t:t(0,45)=(0,35)",128,0,199,0
  60               		.stabs	"int_fast8_t:t(0,46)=(0,28)",128,0,213,0
  61               		.stabs	"uint_fast8_t:t(0,47)=(0,29)",128,0,218,0
  62               		.stabs	"int_fast16_t:t(0,48)=(0,30)",128,0,223,0
  63               		.stabs	"uint_fast16_t:t(0,49)=(0,31)",128,0,228,0
  64               		.stabs	"int_fast32_t:t(0,50)=(0,32)",128,0,233,0
  65               		.stabs	"uint_fast32_t:t(0,51)=(0,33)",128,0,238,0
  66               		.stabs	"int_fast64_t:t(0,52)=(0,34)",128,0,246,0
  67               		.stabs	"uint_fast64_t:t(0,53)=(0,35)",128,0,253,0
  68               		.stabs	"intmax_t:t(0,54)=(0,34)",128,0,273,0
  69               		.stabs	"uintmax_t:t(0,55)=(0,35)",128,0,278,0
  70               		.stabs	"int_farptr_t:t(0,56)=(0,32)",128,0,77,0
  71               		.stabs	"uint_farptr_t:t(0,57)=(0,33)",128,0,81,0
  72               		.stabs	"._0:Tt(0,58)=s3low:(0,13),0,8;high:(0,13),8,8;extended:(0,13),16,8;;",128,0,240,0
  73               		.stabs	"__fuse_t:t(0,58)",128,0,244,0
  74               		.stabs	"size_t:t(0,59)=(0,12)",128,0,213,0
  75               		.stabs	"ili9341::Orientation:t(0,60)=@s8;eLandscape:0,Portrait:1,FlipLandscape:2,FlipPortrait:3,BM
  76               		.stabs	"ili9341:Tt(0,61)=s1init::(0,62)=f(0,4):_ZN7ili93414initEv;2A?;idle::(0,63)=f(0,4):_ZN7ili9
  77               		.stabs	"__gnuc_va_list:t(0,67)=(0,3)",128,0,40,0
  78               		.stabs	"va_list:t(0,68)=(0,67)",128,0,102,0
  79               		.stabs	"__file:Tt(0,69)=s14buf:(0,70)=*(0,17),0,16;unget:(0,13),16,8;flags:(0,29),24,8;size:(0,9),
  80               		.stabs	"._1:Tt(0,76)=s4quot:(0,9),0,16;rem:(0,9),16,16;;",128,0,68,0
  81               		.stabs	"div_t:t(0,76)",128,0,71,0
  82               		.stabs	"._2:Tt(0,77)=s8quot:(0,15),0,32;rem:(0,15),32,32;;",128,0,74,0
  83               		.stabs	"ldiv_t:t(0,77)",128,0,77,0
  84               		.stabs	"__compar_fn_t:t(0,78)=(0,79)=*(0,80)=f(0,9)",128,0,80,0
  85               		.stabs	"tft_t::._3:Tt(0,81)=s15zoom:(0,29),0,8;orient:(0,29),8,8;tabSize:(0,29),16,8;x:(0,31),24,1
  86               		.stabs	"tft_t:Tt(0,82)=s15!1,020,(0,61);d:/0(0,81),0,120;__base_ctor ::(0,83)=#(0,82),(0,4),(0,84)
  87               		.section	.text._ZN7ili93413cmdEh,"axG",@progbits,_ZN7ili93413cmdEh,comdat
  88               		.stabs	"_ZN7ili93413cmdEh:F(0,4)",36,0,72,_ZN7ili93413cmdEh
  89               		.stabs	"dat:P(0,29)",64,0,72,24
  90               		.weak	_ZN7ili93413cmdEh
  91               		.type	_ZN7ili93413cmdEh, @function
  92               	_ZN7ili93413cmdEh:
  93               		.stabd	46,0,0
  94               		.stabs	"ili9341.h",132,0,0,.Ltext1
  95               	.Ltext1:
   1:ili9341.h     **** #ifndef ILI9341_H
   2:ili9341.h     **** #define ILI9341_H
   3:ili9341.h     **** 
   4:ili9341.h     **** #include "connection.h"
   5:ili9341.h     **** 
   6:ili9341.h     **** #include <avr/io.h>
   7:ili9341.h     **** #include <avr/cpufunc.h>
   8:ili9341.h     **** #include <util/delay.h>
   9:ili9341.h     **** 
  10:ili9341.h     **** class ili9341
  11:ili9341.h     **** {
  12:ili9341.h     **** public:
  13:ili9341.h     **** 	enum Orientation {Landscape, Portrait, FlipLandscape, FlipPortrait, \
  14:ili9341.h     **** 		BMPLandscape, BMPPortrait, BMPFlipLandscape, BMPFlipPortrait};
  15:ili9341.h     **** 
  16:ili9341.h     **** 	static inline void init(void);
  17:ili9341.h     **** 	static inline void idle(bool e) {cmd(0x38 + e);}
  18:ili9341.h     **** 	static inline void sleep(bool e) {cmd(0x10 + e);}
  19:ili9341.h     **** 	static inline void inversion(bool e) {cmd(0x20 + e);}
GAS LISTING /tmp/ccHDklfR.s 			page 3


  20:ili9341.h     **** 
  21:ili9341.h     **** //protected:
  22:ili9341.h     **** 	static inline void cmd(uint8_t dat);
  23:ili9341.h     **** 	static inline void data(uint8_t dat);
  24:ili9341.h     **** 	static inline void send(bool c, uint8_t dat);
  25:ili9341.h     **** 	static inline uint8_t recv(void);
  26:ili9341.h     **** 	static inline void mode(bool _recv);
  27:ili9341.h     **** 	static inline void _setBGLight(bool ctrl);
  28:ili9341.h     **** 	static inline void _setOrient(uint8_t o);
  29:ili9341.h     **** };
  30:ili9341.h     **** 
  31:ili9341.h     **** // Defined as inline to excute faster
  32:ili9341.h     **** 
  33:ili9341.h     **** #define LOW(b)	TFT_WCTRL &= ~(b)
  34:ili9341.h     **** #define HIGH(b)	TFT_WCTRL |= (b)
  35:ili9341.h     **** #define SEND() TFT_PDATA = 0xFF
  36:ili9341.h     **** #define RECV() do { \
  37:ili9341.h     **** 	TFT_PDATA = 0x00; \
  38:ili9341.h     **** 	TFT_WDATA = 0xFF; \
  39:ili9341.h     **** } while(0)
  40:ili9341.h     **** 
  41:ili9341.h     **** inline void ili9341::_setOrient(uint8_t o)
  42:ili9341.h     **** {
  43:ili9341.h     **** 	cmd(0x36);			// Memory Access Control
  44:ili9341.h     **** 	switch (o) {
  45:ili9341.h     **** 	case Landscape:
  46:ili9341.h     **** 		data(0x28);		// Column Address Order, BGR
  47:ili9341.h     **** 		break;
  48:ili9341.h     **** 	case Portrait:
  49:ili9341.h     **** 		data(0x48);		// Column Address Order, BGR
  50:ili9341.h     **** 		break;
  51:ili9341.h     **** 	case FlipLandscape:
  52:ili9341.h     **** 		data(0xE8);		// Column Address Order, BGR
  53:ili9341.h     **** 		break;
  54:ili9341.h     **** 	case FlipPortrait:
  55:ili9341.h     **** 		data(0x88);		// Column Address Order, BGR
  56:ili9341.h     **** 		break;
  57:ili9341.h     **** 	case BMPLandscape:
  58:ili9341.h     **** 		data(0x68);		// Column Address Order, BGR
  59:ili9341.h     **** 		break;
  60:ili9341.h     **** 	case BMPFlipLandscape:
  61:ili9341.h     **** 		data(0xA8);		// Column Address Order, BGR
  62:ili9341.h     **** 		break;
  63:ili9341.h     **** 	case BMPPortrait:
  64:ili9341.h     **** 		data(0xD8);		// Column Address Order, BGR
  65:ili9341.h     **** 		break;
  66:ili9341.h     **** 	case BMPFlipPortrait:
  67:ili9341.h     **** 		data(0x18);		// Column Address Order, BGR
  68:ili9341.h     **** 		break;
  69:ili9341.h     **** 	}
  70:ili9341.h     **** }
  71:ili9341.h     **** 
  72:ili9341.h     **** inline void ili9341::cmd(uint8_t dat)
  73:ili9341.h     **** {
  96               		.stabn	68,0,73,.LM0-.LFBB1
  97               	.LM0:
  98               	.LFBB1:
GAS LISTING /tmp/ccHDklfR.s 			page 4


  99               	/* prologue: function */
 100               	/* frame size = 0 */
 101               	/* stack size = 0 */
 102               	.L__stack_usage = 0
  74:ili9341.h     **** 	LOW(TFT_RS);
 103               		.stabn	68,0,74,.LM1-.LFBB1
 104               	.LM1:
 105 0000 1498      		cbi 0x2,4
  75:ili9341.h     **** 	TFT_WDATA = dat;
 106               		.stabn	68,0,75,.LM2-.LFBB1
 107               	.LM2:
 108 0002 88B9      		out 0x8,r24
  76:ili9341.h     **** 	LOW(TFT_WR);
 109               		.stabn	68,0,76,.LM3-.LFBB1
 110               	.LM3:
 111 0004 1398      		cbi 0x2,3
  77:ili9341.h     **** 	HIGH(TFT_WR);
 112               		.stabn	68,0,77,.LM4-.LFBB1
 113               	.LM4:
 114 0006 139A      		sbi 0x2,3
  78:ili9341.h     **** 	HIGH(TFT_RS);
 115               		.stabn	68,0,78,.LM5-.LFBB1
 116               	.LM5:
 117 0008 149A      		sbi 0x2,4
 118 000a 0895      		ret
 119               		.size	_ZN7ili93413cmdEh, .-_ZN7ili93413cmdEh
 120               	.Lscope1:
 121               		.stabs	"",36,0,0,.Lscope1-.LFBB1
 122               		.stabd	78,0,0
 123               		.section	.text._ZN7ili93414dataEh,"axG",@progbits,_ZN7ili93414dataEh,comdat
 124               		.stabs	"_ZN7ili93414dataEh:F(0,4)",36,0,81,_ZN7ili93414dataEh
 125               		.stabs	"dat:P(0,29)",64,0,81,24
 126               		.weak	_ZN7ili93414dataEh
 127               		.type	_ZN7ili93414dataEh, @function
 128               	_ZN7ili93414dataEh:
 129               		.stabd	46,0,0
  79:ili9341.h     **** }
  80:ili9341.h     **** 
  81:ili9341.h     **** inline void ili9341::data(uint8_t dat)
  82:ili9341.h     **** {
 130               		.stabn	68,0,82,.LM6-.LFBB2
 131               	.LM6:
 132               	.LFBB2:
 133               	/* prologue: function */
 134               	/* frame size = 0 */
 135               	/* stack size = 0 */
 136               	.L__stack_usage = 0
  83:ili9341.h     **** 	TFT_WDATA = dat;
 137               		.stabn	68,0,83,.LM7-.LFBB2
 138               	.LM7:
 139 0000 88B9      		out 0x8,r24
  84:ili9341.h     **** 	LOW(TFT_WR);
 140               		.stabn	68,0,84,.LM8-.LFBB2
 141               	.LM8:
 142 0002 1398      		cbi 0x2,3
  85:ili9341.h     **** 	HIGH(TFT_WR);
 143               		.stabn	68,0,85,.LM9-.LFBB2
GAS LISTING /tmp/ccHDklfR.s 			page 5


 144               	.LM9:
 145 0004 139A      		sbi 0x2,3
 146 0006 0895      		ret
 147               		.size	_ZN7ili93414dataEh, .-_ZN7ili93414dataEh
 148               	.Lscope2:
 149               		.stabs	"",36,0,0,.Lscope2-.LFBB2
 150               		.stabd	78,0,0
 151               		.text
 152               		.stabs	"_ZN5tft_t4areaEjjjj.isra.16:f(0,4)",36,0,293,_ZN5tft_t4areaEjjjj.isra.16
 153               		.stabs	"x:P(0,31)",64,0,293,28
 154               		.stabs	"y:P(0,31)",64,0,293,16
 155               		.stabs	"w:P(0,31)",64,0,293,12
 156               		.stabs	"h:P(0,31)",64,0,293,14
 157               		.type	_ZN5tft_t4areaEjjjj.isra.16, @function
 158               	_ZN5tft_t4areaEjjjj.isra.16:
 159               		.stabd	46,0,0
 160               		.stabs	"tft.h",132,0,0,.Ltext2
 161               	.Ltext2:
   1:tft.h         **** #ifndef TFT_H
   2:tft.h         **** #define TFT_H
   3:tft.h         **** 
   4:tft.h         **** #define FONT_WIDTH 6
   5:tft.h         **** #define FONT_HEIGHT 8
   6:tft.h         **** //#define TFT_SCROLL
   7:tft.h         **** 
   8:tft.h         **** #include <avr/io.h>
   9:tft.h         **** #include <avr/pgmspace.h>
  10:tft.h         **** #include <stdio.h>
  11:tft.h         **** #include <stdlib.h>
  12:tft.h         **** #include "ili9341.h"
  13:tft.h         **** #include "ascii.h"
  14:tft.h         **** 
  15:tft.h         **** class tft_t: public ili9341
  16:tft.h         **** {
  17:tft.h         **** public:
  18:tft.h         **** 	tft_t(void);
  19:tft.h         **** 
  20:tft.h         **** 	inline class tft_t& operator<<(const char c);
  21:tft.h         **** 	inline class tft_t& operator<<(const char *str);
  22:tft.h         **** 	inline class tft_t& operator<<(const int16_t i);
  23:tft.h         **** 	inline class tft_t& operator<<(const uint16_t i);
  24:tft.h         **** 	inline class tft_t& operator<<(const int32_t i);
  25:tft.h         **** 	inline class tft_t& operator<<(const uint32_t i);
  26:tft.h         **** 	inline class tft_t& operator++(int x);
  27:tft.h         **** 	inline class tft_t& operator--(int x);
  28:tft.h         **** 	inline class tft_t& operator*=(uint8_t z);
  29:tft.h         **** 	inline class tft_t& operator/=(uint8_t o);
  30:tft.h         **** 	inline class tft_t& operator^=(uint16_t l);
  31:tft.h         **** 
  32:tft.h         **** 	inline void setX(uint16_t x) {d.x = x;}
  33:tft.h         **** 	inline void setY(uint16_t y) {d.y = y;}
  34:tft.h         **** 	inline void setXY(uint16_t x, uint16_t y) {setX(x); setY(y);}
  35:tft.h         **** 	inline uint16_t x(void) const {return d.x;}
  36:tft.h         **** 	inline uint16_t y(void) const {return d.y;}
  37:tft.h         **** 	inline void setZoom(const uint8_t zoom) {d.zoom = zoom;}
  38:tft.h         **** 	inline uint8_t zoom(void) const {return d.zoom;}
  39:tft.h         **** 	inline void setForeground(uint16_t c) {d.fgc = c;}
GAS LISTING /tmp/ccHDklfR.s 			page 6


  40:tft.h         **** 	inline void setBackground(uint16_t c) {d.bgc = c;}
  41:tft.h         **** 	inline uint16_t foreground(void) const {return d.fgc;}
  42:tft.h         **** 	inline uint16_t background(void) const {return d.bgc;}
  43:tft.h         **** 	inline void setOrient(uint8_t o);
  44:tft.h         **** 	inline uint8_t orient(void) const {return d.orient;}
  45:tft.h         **** 	inline void setBGLight(bool e) {_setBGLight(e);}
  46:tft.h         **** 	inline void setTabSize(uint8_t t) {d.tabSize = t;}
  47:tft.h         **** 	inline uint8_t tabSize(void) const {return d.tabSize;}
  48:tft.h         **** 	inline void clean(void) {fill(background()); setX(0); setY(0);}
  49:tft.h         **** 	void line(uint16_t x0, uint16_t y0, uint16_t x1, uint16_t y1, \
  50:tft.h         **** 		uint16_t c);
  51:tft.h         **** 	void frame(uint16_t x, uint16_t y, uint16_t w, uint16_t h, \
  52:tft.h         **** 		uint8_t s, uint16_t c);
  53:tft.h         **** 	inline void fill(uint16_t clr);
  54:tft.h         **** 	void putch(char ch);
  55:tft.h         **** 	void rectangle(uint16_t x, uint16_t y, uint16_t w, uint16_t h, \
  56:tft.h         **** 		uint16_t c);
  57:tft.h         **** 	inline void point(uint16_t x, uint16_t y, uint16_t c);
  58:tft.h         **** 
  59:tft.h         **** 	inline void area(uint16_t x, uint16_t y, uint16_t w, uint16_t h);
  60:tft.h         **** 	inline void all(void);
  61:tft.h         **** 	inline void bmp(bool e);
  62:tft.h         **** 	inline uint16_t width(void) const {return d.w;}
  63:tft.h         **** 	inline uint16_t height(void) const {return d.h;}
  64:tft.h         **** 	static inline void start(void) {cmd(0x2C);}
  65:tft.h         **** 	static inline void write(uint16_t c) {data(c / 0x0100); data(c % 0x0100);}
  66:tft.h         **** 
  67:tft.h         **** protected:
  68:tft.h         **** 	inline void newline(void);
  69:tft.h         **** 	inline void next(void);
  70:tft.h         **** 	inline void tab(void);
  71:tft.h         **** 
  72:tft.h         **** private:
  73:tft.h         **** 	inline void setWidth(const uint16_t w) {d.w = w;}
  74:tft.h         **** 	inline void setHeight(const uint16_t h) {d.h = h;}
  75:tft.h         **** 
  76:tft.h         **** 	struct {
  77:tft.h         **** 		uint8_t zoom, orient, tabSize;
  78:tft.h         **** 		uint16_t x, y, w, h, fgc, bgc;
  79:tft.h         **** 	} d;
  80:tft.h         **** };
  81:tft.h         **** 
  82:tft.h         **** FILE *tftout(tft_t *hw);
  83:tft.h         **** 
  84:tft.h         **** //extern class tft_t tft;
  85:tft.h         **** 
  86:tft.h         **** // Defined as inline to execute faster
  87:tft.h         **** 
  88:tft.h         **** #define WIDTH FONT_WIDTH
  89:tft.h         **** #define HEIGHT FONT_HEIGHT
  90:tft.h         **** #define SIZE_H 320
  91:tft.h         **** #define SIZE_W 240
  92:tft.h         **** #define DEF_FGC 0xFFFF
  93:tft.h         **** #define DEF_BGC 0x0000
  94:tft.h         **** #define SWAP(x, y) { \
  95:tft.h         **** 	(x) = (x) ^ (y); \
  96:tft.h         **** 	(y) = (x) ^ (y); \
GAS LISTING /tmp/ccHDklfR.s 			page 7


  97:tft.h         **** 	(x) = (x) ^ (y); \
  98:tft.h         **** }
  99:tft.h         **** 
 100:tft.h         **** inline void tft_t::bmp(bool e)
 101:tft.h         **** {
 102:tft.h         **** 	if (!e) {
 103:tft.h         **** 		_setOrient(orient());
 104:tft.h         **** 		return;
 105:tft.h         **** 	}
 106:tft.h         **** 	switch (orient()) {
 107:tft.h         **** 	case Landscape:
 108:tft.h         **** 		_setOrient(BMPLandscape);
 109:tft.h         **** 		break;
 110:tft.h         **** 	case Portrait:
 111:tft.h         **** 		_setOrient(BMPPortrait);
 112:tft.h         **** 		break;
 113:tft.h         **** 	case FlipLandscape:
 114:tft.h         **** 		_setOrient(BMPFlipLandscape);
 115:tft.h         **** 		break;
 116:tft.h         **** 	case FlipPortrait:
 117:tft.h         **** 		_setOrient(BMPFlipPortrait);
 118:tft.h         **** 	}
 119:tft.h         **** }
 120:tft.h         **** 
 121:tft.h         **** inline class tft_t& tft_t::operator^=(uint16_t l)
 122:tft.h         **** {
 123:tft.h         **** 	// 0x2C Write, 0x2E Read, 0x3C / 0x3E Continue, 0x00 NOP
 124:tft.h         **** 	uint8_t buff[width() * 2];
 125:tft.h         **** 	uint16_t r;
 126:tft.h         **** 	cmd(0x2A);			// Column Address Set
 127:tft.h         **** 	data(0x00);
 128:tft.h         **** 	data(0x00);
 129:tft.h         **** 	data((width() - 1) / 0x0100);
 130:tft.h         **** 	data((width() - 1) % 0x0100);
 131:tft.h         **** 	for (r = 0; r < height() - l; r++) {
 132:tft.h         **** 		uint16_t b = width() * 2;
 133:tft.h         **** 		//area(0, r + l, w, 1);
 134:tft.h         **** 		cmd(0x2B);		// Page Address Set
 135:tft.h         **** 		data((r + l) / 0x0100);
 136:tft.h         **** 		data((r + l) % 0x0100);
 137:tft.h         **** 		data((r + l) / 0x0100);
 138:tft.h         **** 		data((r + l) % 0x0100);
 139:tft.h         **** 		cmd(0x2E);		// Read
 140:tft.h         **** 		mode(true);		// Read mode
 141:tft.h         **** 		recv();
 142:tft.h         **** 		while (b--) {
 143:tft.h         **** 			buff[b] = recv() & 0xF8;
 144:tft.h         **** 			uint8_t g = recv();
 145:tft.h         **** 			buff[b--] |= g >> 5;
 146:tft.h         **** 			buff[b] = (g << 3) & 0xE0;
 147:tft.h         **** 			buff[b] |= recv() >> 3;
 148:tft.h         **** 		}
 149:tft.h         **** 		mode(false);		// Write mode
 150:tft.h         **** 
 151:tft.h         **** 		b = width() * 2;
 152:tft.h         **** 		//area(0, r, w, 1);
 153:tft.h         **** 		cmd(0x2B);		// Page Address Set
GAS LISTING /tmp/ccHDklfR.s 			page 8


 154:tft.h         **** 		data(r / 0x0100);
 155:tft.h         **** 		data(r % 0x0100);
 156:tft.h         **** 		data(r / 0x0100);
 157:tft.h         **** 		data(r % 0x0100);
 158:tft.h         **** 		cmd(0x2C);		// Write
 159:tft.h         **** 		while (b--)
 160:tft.h         **** 			data(buff[b]);
 161:tft.h         **** 	}
 162:tft.h         **** 	//area(0, h - l, w, l);
 163:tft.h         **** 	cmd(0x2B);		// Page Address Set
 164:tft.h         **** 	data((height() - l) / 0x0100);
 165:tft.h         **** 	data((height() - l) % 0x0100);
 166:tft.h         **** 	data((height() - 1) / 0x0100);
 167:tft.h         **** 	data((height() - 1) % 0x0100);
 168:tft.h         **** 	cmd(0x2C);
 169:tft.h         **** 	while (r++ < height()) {
 170:tft.h         **** 		for (uint16_t c = width(); c; c--) {
 171:tft.h         **** 			data(background() / 0x0100);
 172:tft.h         **** 			data(background() % 0x0100);
 173:tft.h         **** 		}
 174:tft.h         **** 	}
 175:tft.h         **** 	return *this;
 176:tft.h         **** }
 177:tft.h         **** 
 178:tft.h         **** inline class tft_t& tft_t::operator/=(uint8_t o)
 179:tft.h         **** {
 180:tft.h         **** 	setOrient(o);
 181:tft.h         **** 	return *this;
 182:tft.h         **** }
 183:tft.h         **** 
 184:tft.h         **** inline class tft_t& tft_t::operator*=(uint8_t z)
 185:tft.h         **** {
 186:tft.h         **** 	setZoom(z);
 187:tft.h         **** 	return *this;
 188:tft.h         **** }
 189:tft.h         **** 
 190:tft.h         **** inline class tft_t& tft_t::operator++(int x)
 191:tft.h         **** {
 192:tft.h         **** 	_setBGLight(true);
 193:tft.h         **** 	return *this;
 194:tft.h         **** }
 195:tft.h         **** 
 196:tft.h         **** inline class tft_t& tft_t::operator--(int x)
 197:tft.h         **** {
 198:tft.h         **** 	_setBGLight(false);
 199:tft.h         **** 	return *this;
 200:tft.h         **** }
 201:tft.h         **** 
 202:tft.h         **** inline class tft_t& tft_t::operator<<(const int16_t i)
 203:tft.h         **** {
 204:tft.h         **** 	uint16_t p = 10000, n = abs(i);
 205:tft.h         **** 	if (i < 0)
 206:tft.h         **** 		*this << '-';
 207:tft.h         **** 	while ((p != 1) && (n / p == 0))
 208:tft.h         **** 		p /= 10;
 209:tft.h         **** 	while (p != 0) {
 210:tft.h         **** 		*this << (char)((n / p) % 10 + '0');
GAS LISTING /tmp/ccHDklfR.s 			page 9


 211:tft.h         **** 		p /= 10;
 212:tft.h         **** 	}
 213:tft.h         **** 	return *this;
 214:tft.h         **** }
 215:tft.h         **** 
 216:tft.h         **** inline class tft_t& tft_t::operator<<(const uint16_t i)
 217:tft.h         **** {
 218:tft.h         **** 	uint16_t p = 10000;
 219:tft.h         **** 	while ((p != 1) && (i / p == 0))
 220:tft.h         **** 		p /= 10;
 221:tft.h         **** 	while (p != 0) {
 222:tft.h         **** 		*this << (char)((i / p) % 10 + '0');
 223:tft.h         **** 		p /= 10;
 224:tft.h         **** 	}
 225:tft.h         **** 	return *this;
 226:tft.h         **** }
 227:tft.h         **** 
 228:tft.h         **** inline class tft_t& tft_t::operator<<(const char c)
 229:tft.h         **** {
 230:tft.h         **** 	switch (c) {
 231:tft.h         **** 	case '\n':
 232:tft.h         **** 		newline();
 233:tft.h         **** 		break;
 234:tft.h         **** 	case '\t':
 235:tft.h         **** 		tab();
 236:tft.h         **** 		break;
 237:tft.h         **** 	default:
 238:tft.h         **** 		if ((unsigned)c < ' ' || (unsigned)c > 127)
 239:tft.h         **** 			break;
 240:tft.h         **** 		putch(c);
 241:tft.h         **** 		next();
 242:tft.h         **** 	}
 243:tft.h         **** 	return *this;
 244:tft.h         **** }
 245:tft.h         **** 
 246:tft.h         **** inline class tft_t& tft_t::operator<<(const char *str)
 247:tft.h         **** {
 248:tft.h         **** 	while (*str) {
 249:tft.h         **** 		*this << *str;
 250:tft.h         **** 		str++;
 251:tft.h         **** 	}
 252:tft.h         **** 	return *this;
 253:tft.h         **** }
 254:tft.h         **** 
 255:tft.h         **** inline void tft_t::point(uint16_t x, uint16_t y, uint16_t c)
 256:tft.h         **** {
 257:tft.h         **** 	area(x, y, 1, 1);
 258:tft.h         **** 	cmd(0x2C);			// Memory Write
 259:tft.h         **** 	data(c / 0x0100);
 260:tft.h         **** 	data(c % 0x0100);
 261:tft.h         **** }
 262:tft.h         **** 
 263:tft.h         **** inline void tft_t::newline(void)
 264:tft.h         **** {
 265:tft.h         **** 	setX(0);
 266:tft.h         **** 	setY(y() + HEIGHT * zoom());
 267:tft.h         **** 	if (y() + HEIGHT * zoom() > height()) {
GAS LISTING /tmp/ccHDklfR.s 			page 10


 268:tft.h         **** #ifdef TFT_SCROLL
 269:tft.h         **** 		*this ^= HEIGHT * zoom;
 270:tft.h         **** 		y -= HEIGHT * zoom;
 271:tft.h         **** #else
 272:tft.h         **** 		fill(background());
 273:tft.h         **** 		setY(0);
 274:tft.h         **** #endif
 275:tft.h         **** 	}
 276:tft.h         **** }
 277:tft.h         **** 
 278:tft.h         **** inline void tft_t::fill(uint16_t clr)
 279:tft.h         **** {
 280:tft.h         **** 	uint8_t ch = clr / 0x0100, cl = clr % 0x0100;
 281:tft.h         **** 	uint16_t x = width(), y;
 282:tft.h         **** 	all();
 283:tft.h         **** 	cmd(0x2C);			// Memory Write
 284:tft.h         **** 	while (x--) {
 285:tft.h         **** 		y = height();
 286:tft.h         **** 		while (y--) {
 287:tft.h         **** 			data(ch);
 288:tft.h         **** 			data(cl);
 289:tft.h         **** 		}
 290:tft.h         **** 	}
 291:tft.h         **** }
 292:tft.h         **** 
 293:tft.h         **** inline void tft_t::area(uint16_t x, uint16_t y, uint16_t w, uint16_t h)
 162               		.stabn	68,0,293,.LM10-.LFBB3
 163               	.LM10:
 164               	.LFBB3:
 165 0000 BF92      		push r11
 166 0002 CF92      		push r12
 167 0004 DF92      		push r13
 168 0006 EF92      		push r14
 169 0008 FF92      		push r15
 170 000a 0F93      		push r16
 171 000c 1F93      		push r17
 172 000e CF93      		push r28
 173 0010 DF93      		push r29
 174               	/* prologue: function */
 175               	/* frame size = 0 */
 176               	/* stack size = 9 */
 177               	.L__stack_usage = 9
 178 0012 EC01      		movw r28,r24
 179 0014 8B01      		movw r16,r22
 180 0016 6A01      		movw r12,r20
 181 0018 7901      		movw r14,r18
 294:tft.h         **** {
 295:tft.h         **** 	cmd(0x2A);			// Column Address Set
 182               		.stabn	68,0,295,.LM11-.LFBB3
 183               	.LM11:
 184 001a 8AE2      		ldi r24,lo8(42)
 185 001c 0E94 0000 		call _ZN7ili93413cmdEh
 296:tft.h         **** 	data(x / 0x0100);
 186               		.stabn	68,0,296,.LM12-.LFBB3
 187               	.LM12:
 188 0020 8D2F      		mov r24,r29
 189 0022 0E94 0000 		call _ZN7ili93414dataEh
GAS LISTING /tmp/ccHDklfR.s 			page 11


 297:tft.h         **** 	data(x % 0x0100);
 190               		.stabn	68,0,297,.LM13-.LFBB3
 191               	.LM13:
 192 0026 BC2E      		mov r11,r28
 193 0028 8C2F      		mov r24,r28
 194 002a 0E94 0000 		call _ZN7ili93414dataEh
 298:tft.h         **** 	data((x + w - 1) / 0x0100);
 195               		.stabn	68,0,298,.LM14-.LFBB3
 196               	.LM14:
 197 002e 2197      		sbiw r28,1
 198 0030 CC0D      		add r28,r12
 199 0032 DD1D      		adc r29,r13
 200 0034 8D2F      		mov r24,r29
 201 0036 0E94 0000 		call _ZN7ili93414dataEh
 299:tft.h         **** 	data((x + w - 1) % 0x0100);
 202               		.stabn	68,0,299,.LM15-.LFBB3
 203               	.LM15:
 204 003a 8B2D      		mov r24,r11
 205 003c 8150      		subi r24,lo8(-(-1))
 206 003e 8C0D      		add r24,r12
 207 0040 0E94 0000 		call _ZN7ili93414dataEh
 300:tft.h         **** 	cmd(0x2B);			// Page Address Set
 208               		.stabn	68,0,300,.LM16-.LFBB3
 209               	.LM16:
 210 0044 8BE2      		ldi r24,lo8(43)
 211 0046 0E94 0000 		call _ZN7ili93413cmdEh
 301:tft.h         **** 	data(y / 0x0100);
 212               		.stabn	68,0,301,.LM17-.LFBB3
 213               	.LM17:
 214 004a 812F      		mov r24,r17
 215 004c 0E94 0000 		call _ZN7ili93414dataEh
 302:tft.h         **** 	data(y % 0x0100);
 216               		.stabn	68,0,302,.LM18-.LFBB3
 217               	.LM18:
 218 0050 C02F      		mov r28,r16
 219 0052 802F      		mov r24,r16
 220 0054 0E94 0000 		call _ZN7ili93414dataEh
 303:tft.h         **** 	data((y + h - 1) / 0x0100);
 221               		.stabn	68,0,303,.LM19-.LFBB3
 222               	.LM19:
 223 0058 0150      		subi r16,1
 224 005a 1109      		sbc r17,__zero_reg__
 225 005c 0E0D      		add r16,r14
 226 005e 1F1D      		adc r17,r15
 227 0060 812F      		mov r24,r17
 228 0062 0E94 0000 		call _ZN7ili93414dataEh
 304:tft.h         **** 	data((y + h - 1) % 0x0100);
 229               		.stabn	68,0,304,.LM20-.LFBB3
 230               	.LM20:
 231 0066 8C2F      		mov r24,r28
 232 0068 8150      		subi r24,lo8(-(-1))
 233 006a 8E0D      		add r24,r14
 234               	/* epilogue start */
 305:tft.h         **** }
 235               		.stabn	68,0,305,.LM21-.LFBB3
 236               	.LM21:
 237 006c DF91      		pop r29
GAS LISTING /tmp/ccHDklfR.s 			page 12


 238 006e CF91      		pop r28
 239 0070 1F91      		pop r17
 240 0072 0F91      		pop r16
 241 0074 FF90      		pop r15
 242 0076 EF90      		pop r14
 243 0078 DF90      		pop r13
 244 007a CF90      		pop r12
 245 007c BF90      		pop r11
 304:tft.h         **** 	data((y + h - 1) % 0x0100);
 246               		.stabn	68,0,304,.LM22-.LFBB3
 247               	.LM22:
 248 007e 0C94 0000 		jmp _ZN7ili93414dataEh
 249               		.size	_ZN5tft_t4areaEjjjj.isra.16, .-_ZN5tft_t4areaEjjjj.isra.16
 250               	.Lscope3:
 251               		.stabs	"",36,0,0,.Lscope3-.LFBB3
 252               		.stabd	78,0,0
 253               		.stabs	"_ZN5tft_t5pointEjjj.isra.17:f(0,4)",36,0,255,_ZN5tft_t5pointEjjj.isra.17
 254               		.stabs	"x:P(0,31)",64,0,255,24
 255               		.stabs	"y:P(0,31)",64,0,255,22
 256               		.type	_ZN5tft_t5pointEjjj.isra.17, @function
 257               	_ZN5tft_t5pointEjjj.isra.17:
 258               		.stabd	46,0,0
 255:tft.h         **** inline void tft_t::point(uint16_t x, uint16_t y, uint16_t c)
 259               		.stabn	68,0,255,.LM23-.LFBB4
 260               	.LM23:
 261               	.LFBB4:
 262 0082 CF93      		push r28
 263 0084 DF93      		push r29
 264               	/* prologue: function */
 265               	/* frame size = 0 */
 266               	/* stack size = 2 */
 267               	.L__stack_usage = 2
 268 0086 EA01      		movw r28,r20
 257:tft.h         **** 	area(x, y, 1, 1);
 269               		.stabn	68,0,257,.LM24-.LFBB4
 270               	.LM24:
 271 0088 21E0      		ldi r18,lo8(1)
 272 008a 30E0      		ldi r19,0
 273 008c 41E0      		ldi r20,lo8(1)
 274 008e 50E0      		ldi r21,0
 275 0090 0E94 0000 		call _ZN5tft_t4areaEjjjj.isra.16
 258:tft.h         **** 	cmd(0x2C);			// Memory Write
 276               		.stabn	68,0,258,.LM25-.LFBB4
 277               	.LM25:
 278 0094 8CE2      		ldi r24,lo8(44)
 279 0096 0E94 0000 		call _ZN7ili93413cmdEh
 259:tft.h         **** 	data(c / 0x0100);
 280               		.stabn	68,0,259,.LM26-.LFBB4
 281               	.LM26:
 282 009a 8D2F      		mov r24,r29
 283 009c 0E94 0000 		call _ZN7ili93414dataEh
 260:tft.h         **** 	data(c % 0x0100);
 284               		.stabn	68,0,260,.LM27-.LFBB4
 285               	.LM27:
 286 00a0 8C2F      		mov r24,r28
 287               	/* epilogue start */
 261:tft.h         **** }
GAS LISTING /tmp/ccHDklfR.s 			page 13


 288               		.stabn	68,0,261,.LM28-.LFBB4
 289               	.LM28:
 290 00a2 DF91      		pop r29
 291 00a4 CF91      		pop r28
 260:tft.h         **** 	data(c % 0x0100);
 292               		.stabn	68,0,260,.LM29-.LFBB4
 293               	.LM29:
 294 00a6 0C94 0000 		jmp _ZN7ili93414dataEh
 295               		.size	_ZN5tft_t5pointEjjj.isra.17, .-_ZN5tft_t5pointEjjj.isra.17
 296               	.Lscope4:
 297               		.stabs	"",36,0,0,.Lscope4-.LFBB4
 298               		.stabd	78,0,0
 299               		.section	.text._ZN5tft_t4fillEj,"axG",@progbits,_ZN5tft_t4fillEj,comdat
 300               		.stabs	"_ZN5tft_t4fillEj:F(0,4)",36,0,278,_ZN5tft_t4fillEj
 301               		.stabs	"this:P(0,111)=k(0,84)",64,0,278,28
 302               		.weak	_ZN5tft_t4fillEj
 303               		.type	_ZN5tft_t4fillEj, @function
 304               	_ZN5tft_t4fillEj:
 305               		.stabd	46,0,0
 279:tft.h         **** {
 306               		.stabn	68,0,279,.LM30-.LFBB5
 307               	.LM30:
 308               	.LFBB5:
 309 0000 CF92      		push r12
 310 0002 DF92      		push r13
 311 0004 EF92      		push r14
 312 0006 FF92      		push r15
 313 0008 0F93      		push r16
 314 000a 1F93      		push r17
 315 000c CF93      		push r28
 316 000e DF93      		push r29
 317               	/* prologue: function */
 318               	/* frame size = 0 */
 319               	/* stack size = 8 */
 320               	.L__stack_usage = 8
 321 0010 EC01      		movw r28,r24
 322 0012 D62E      		mov r13,r22
 323 0014 C72E      		mov r12,r23
 324               	.LBB164:
 325               		.stabs	"tft.cpp",132,0,0,.Ltext3
 326               	.Ltext3:
   1:tft.cpp       **** #include <avr/io.h>
   2:tft.cpp       **** #include <ctype.h>
   3:tft.cpp       **** #include "ascii.h"
   4:tft.cpp       **** #include "ili9341.h"
   5:tft.cpp       **** #include "tft.h"
   6:tft.cpp       **** 
   7:tft.cpp       **** #define WIDTH FONT_WIDTH
   8:tft.cpp       **** #define HEIGHT FONT_HEIGHT
   9:tft.cpp       **** #define SIZE_H 320
  10:tft.cpp       **** #define SIZE_W 240
  11:tft.cpp       **** #define DEF_FGC 0xFFFF
  12:tft.cpp       **** #define DEF_BGC 0x0000
  13:tft.cpp       **** #define SWAP(x, y) { \
  14:tft.cpp       **** 	(x) = (x) ^ (y); \
  15:tft.cpp       **** 	(y) = (x) ^ (y); \
  16:tft.cpp       **** 	(x) = (x) ^ (y); \
GAS LISTING /tmp/ccHDklfR.s 			page 14


  17:tft.cpp       **** }
  18:tft.cpp       **** 
  19:tft.cpp       **** #include <avr/pgmspace.h>
  20:tft.cpp       **** 
  21:tft.cpp       **** tft_t::tft_t(void)
  22:tft.cpp       **** {
  23:tft.cpp       **** 	setX(0);
  24:tft.cpp       **** 	setY(0);
  25:tft.cpp       **** 	setZoom(1);
  26:tft.cpp       **** 	d.orient = Portrait;
  27:tft.cpp       **** 	setTabSize(4);
  28:tft.cpp       **** 	setWidth(SIZE_W);
  29:tft.cpp       **** 	setHeight(SIZE_H);
  30:tft.cpp       **** 	setForeground(DEF_FGC);
  31:tft.cpp       **** 	setBackground(DEF_BGC);
  32:tft.cpp       **** }
  33:tft.cpp       **** 
  34:tft.cpp       **** void tft_t::frame(uint16_t x, uint16_t y, uint16_t w, uint16_t h, \
  35:tft.cpp       **** 		uint8_t s, uint16_t c)
  36:tft.cpp       **** {
  37:tft.cpp       **** 	rectangle(x, y, w - s, s, c);
  38:tft.cpp       **** 	rectangle(x + w - s, y, s, h - s, c);
  39:tft.cpp       **** 	rectangle(x, y + s, s, h - s, c);
  40:tft.cpp       **** 	rectangle(x + s, y + h - s, w - s, s, c);
  41:tft.cpp       **** }
  42:tft.cpp       **** 
  43:tft.cpp       **** void tft_t::line(uint16_t x0, uint16_t y0, uint16_t x1, uint16_t y1, \
  44:tft.cpp       **** 		uint16_t c)
  45:tft.cpp       **** {
  46:tft.cpp       **** 	if (x0 > width())
  47:tft.cpp       **** 		x0 = width() - 1;
  48:tft.cpp       **** 	if (x1 > width())
  49:tft.cpp       **** 		x1 = width() - 1;
  50:tft.cpp       **** 	if (y0 > height())
  51:tft.cpp       **** 		y0 = height() - 1;
  52:tft.cpp       **** 	if (y1 > height())
  53:tft.cpp       **** 		y1 = height() - 1;
  54:tft.cpp       **** 	if (x0 == x1) {
  55:tft.cpp       **** 		if (y0 > y1)
  56:tft.cpp       **** 			SWAP(y0, y1);
  57:tft.cpp       **** 		rectangle(x0, y0, 1, y1 - y0, c);
  58:tft.cpp       **** 		return;
  59:tft.cpp       **** 	}
  60:tft.cpp       **** 	if (y0 == y1) {
  61:tft.cpp       **** 		if (x0 > x1)
  62:tft.cpp       **** 			SWAP(x0, x1);
  63:tft.cpp       **** 		rectangle(x0, y0, x1 - x0, 1, c);
  64:tft.cpp       **** 		return;
  65:tft.cpp       **** 	}
  66:tft.cpp       **** 	uint16_t dx = abs(x1 - x0), dy = abs(y1 - y0);
  67:tft.cpp       **** 	if (dx < dy) {
  68:tft.cpp       **** 		if (y0 > y1) {
  69:tft.cpp       **** 			SWAP(x0, x1);
  70:tft.cpp       **** 			SWAP(y0, y1);
  71:tft.cpp       **** 		}
  72:tft.cpp       **** 		for (uint16_t y = y0; y <= y1; y++)
  73:tft.cpp       **** 			point(x0 + dx * (y - y0) / dy * \
GAS LISTING /tmp/ccHDklfR.s 			page 15


  74:tft.cpp       **** 					(x0 > x1 ? -1 : 1), y, c);
  75:tft.cpp       **** 	} else {
  76:tft.cpp       **** 		if (x0 > x1) {
  77:tft.cpp       **** 			SWAP(x0, x1);
  78:tft.cpp       **** 			SWAP(y0, y1);
  79:tft.cpp       **** 		}
  80:tft.cpp       **** 		for (uint16_t x = x0; x <= x1; x++)
  81:tft.cpp       **** 			point(x, y0 + dy * (x - x0) / dx * \
  82:tft.cpp       **** 					(y0 > y1 ? -1 : 1), c);
  83:tft.cpp       **** 	}
  84:tft.cpp       **** }
  85:tft.cpp       **** 
  86:tft.cpp       **** void tft_t::rectangle(uint16_t x, uint16_t y, uint16_t w, uint16_t h, \
  87:tft.cpp       **** 		uint16_t c)
  88:tft.cpp       **** {
  89:tft.cpp       **** 	area(x, y, w, h);
  90:tft.cpp       **** 	cmd(0x2C);			// Memory Write
  91:tft.cpp       **** 	while (w--)
  92:tft.cpp       **** 		for (y = 0; y < h; y++) {
  93:tft.cpp       **** 			data(c / 0x0100);
  94:tft.cpp       **** 			data(c % 0x0100);
  95:tft.cpp       **** 		}
  96:tft.cpp       **** }
  97:tft.cpp       **** 
  98:tft.cpp       **** void tft_t::putch(char ch)
  99:tft.cpp       **** {
 100:tft.cpp       **** 	area(x(), y(), WIDTH * zoom(), HEIGHT * zoom());
 101:tft.cpp       **** 	cmd(0x2C);			// Memory Write
 102:tft.cpp       **** 	for (uint8_t i = 0; i < HEIGHT * zoom(); i++) {
 103:tft.cpp       **** 		unsigned char c;
 104:tft.cpp       **** 		c = pgm_read_byte(&(ascii[ch - ' '][i / zoom()]));
 105:tft.cpp       **** 		for (uint8_t j = 0; j < WIDTH * zoom(); j++) {
 106:tft.cpp       **** 			if (c & 0x80) {
 107:tft.cpp       **** 				data(foreground() / 0x0100);
 108:tft.cpp       **** 				data(foreground() % 0x0100);
 109:tft.cpp       **** 			} else {
 110:tft.cpp       **** 				data(background() / 0x0100);
 111:tft.cpp       **** 				data(background() % 0x0100);
 112:tft.cpp       **** 			}
 113:tft.cpp       **** 			if (j % zoom() == zoom() - 1)
 114:tft.cpp       **** 				c <<= 1;
 115:tft.cpp       **** 		}
 116:tft.cpp       **** 	}
 117:tft.cpp       **** }
 118:tft.cpp       **** 
 119:tft.cpp       **** static tft_t *tft;
 120:tft.cpp       **** 
 121:tft.cpp       **** inline int tftputch(const char c, FILE *stream)
 122:tft.cpp       **** {
 123:tft.cpp       **** 	(*tft) << c;
 124:tft.cpp       **** 	return 0;
 125:tft.cpp       **** }
 126:tft.cpp       **** 
 127:tft.cpp       **** FILE *tftout(tft_t *hw)
 128:tft.cpp       **** {
 129:tft.cpp       **** 	static FILE *out = NULL;
 130:tft.cpp       **** 	tft = hw;
GAS LISTING /tmp/ccHDklfR.s 			page 16


 131:tft.cpp       **** 	if (out == NULL)
 132:tft.cpp       **** 		out = fdevopen(tftputch, NULL);
 133:tft.cpp       **** 	return out;
 134:tft.cpp       **** }
 327               		.stabn	68,0,134,.LM31-.LFBB5
 328               	.LM31:
 329 0016 0F81      		ldd r16,Y+7
 330 0018 1885      		ldd r17,Y+8
 331               	.LBB165:
 332               	.LBB166:
 333               		.stabs	"tft.h",132,0,0,.Ltext4
 334               	.Ltext4:
 306:tft.h         **** 
 307:tft.h         **** inline void tft_t::all(void)
 308:tft.h         **** {
 309:tft.h         **** 	cmd(0x2A);			// Column Address Set
 335               		.stabn	68,0,309,.LM32-.LFBB5
 336               	.LM32:
 337 001a 8AE2      		ldi r24,lo8(42)
 338 001c 0E94 0000 		call _ZN7ili93413cmdEh
 310:tft.h         **** 	data(0x00);			// x
 339               		.stabn	68,0,310,.LM33-.LFBB5
 340               	.LM33:
 341 0020 80E0      		ldi r24,0
 342 0022 0E94 0000 		call _ZN7ili93414dataEh
 311:tft.h         **** 	data(0x00);
 343               		.stabn	68,0,311,.LM34-.LFBB5
 344               	.LM34:
 345 0026 80E0      		ldi r24,0
 346 0028 0E94 0000 		call _ZN7ili93414dataEh
 312:tft.h         **** 	data((width() - 1) / 0x0100);	// w
 347               		.stabn	68,0,312,.LM35-.LFBB5
 348               	.LM35:
 349 002c 2F81      		ldd r18,Y+7
 350 002e 3885      		ldd r19,Y+8
 351 0030 2150      		subi r18,1
 352 0032 3109      		sbc r19,__zero_reg__
 353 0034 832F      		mov r24,r19
 354 0036 0E94 0000 		call _ZN7ili93414dataEh
 313:tft.h         **** 	data((width() - 1) % 0x0100);
 355               		.stabn	68,0,313,.LM36-.LFBB5
 356               	.LM36:
 357 003a 8F81      		ldd r24,Y+7
 358 003c 8150      		subi r24,lo8(-(-1))
 359 003e 0E94 0000 		call _ZN7ili93414dataEh
 314:tft.h         **** 	cmd(0x2B);			// Page Address Set
 360               		.stabn	68,0,314,.LM37-.LFBB5
 361               	.LM37:
 362 0042 8BE2      		ldi r24,lo8(43)
 363 0044 0E94 0000 		call _ZN7ili93413cmdEh
 315:tft.h         **** 	data(0x00);			// y
 364               		.stabn	68,0,315,.LM38-.LFBB5
 365               	.LM38:
 366 0048 80E0      		ldi r24,0
 367 004a 0E94 0000 		call _ZN7ili93414dataEh
 316:tft.h         **** 	data(0x00);
 368               		.stabn	68,0,316,.LM39-.LFBB5
GAS LISTING /tmp/ccHDklfR.s 			page 17


 369               	.LM39:
 370 004e 80E0      		ldi r24,0
 371 0050 0E94 0000 		call _ZN7ili93414dataEh
 317:tft.h         **** 	data((height() - 1) / 0x0100);	// h
 372               		.stabn	68,0,317,.LM40-.LFBB5
 373               	.LM40:
 374 0054 2985      		ldd r18,Y+9
 375 0056 3A85      		ldd r19,Y+10
 376 0058 2150      		subi r18,1
 377 005a 3109      		sbc r19,__zero_reg__
 378 005c 832F      		mov r24,r19
 379 005e 0E94 0000 		call _ZN7ili93414dataEh
 318:tft.h         **** 	data((height() - 1) % 0x0100);
 380               		.stabn	68,0,318,.LM41-.LFBB5
 381               	.LM41:
 382 0062 8985      		ldd r24,Y+9
 383 0064 8150      		subi r24,lo8(-(-1))
 384 0066 0E94 0000 		call _ZN7ili93414dataEh
 385               	.LBE166:
 386               	.LBE165:
 283:tft.h         **** 	cmd(0x2C);			// Memory Write
 387               		.stabn	68,0,283,.LM42-.LFBB5
 388               	.LM42:
 389 006a 8CE2      		ldi r24,lo8(44)
 390 006c 0E94 0000 		call _ZN7ili93413cmdEh
 284:tft.h         **** 	while (x--) {
 391               		.stabn	68,0,284,.LM43-.LFBB5
 392               	.LM43:
 393 0070 00C0      		rjmp .L6
 394               	.L9:
 395               		.stabs	"tft.cpp",132,0,0,.Ltext5
 396               	.Ltext5:
 397               		.stabn	68,0,134,.LM44-.LFBB5
 398               	.LM44:
 399 0072 E984      		ldd r14,Y+9
 400 0074 FA84      		ldd r15,Y+10
 401               		.stabs	"tft.h",132,0,0,.Ltext6
 402               	.Ltext6:
 286:tft.h         **** 		while (y--) {
 403               		.stabn	68,0,286,.LM45-.LFBB5
 404               	.LM45:
 405 0076 00C0      		rjmp .L7
 406               	.L8:
 407 0078 81E0      		ldi r24,1
 408 007a E81A      		sub r14,r24
 409 007c F108      		sbc r15,__zero_reg__
 287:tft.h         **** 			data(ch);
 410               		.stabn	68,0,287,.LM46-.LFBB5
 411               	.LM46:
 412 007e 8C2D      		mov r24,r12
 413 0080 0E94 0000 		call _ZN7ili93414dataEh
 288:tft.h         **** 			data(cl);
 414               		.stabn	68,0,288,.LM47-.LFBB5
 415               	.LM47:
 416 0084 8D2D      		mov r24,r13
 417 0086 0E94 0000 		call _ZN7ili93414dataEh
 418               	.L7:
GAS LISTING /tmp/ccHDklfR.s 			page 18


 286:tft.h         **** 		while (y--) {
 419               		.stabn	68,0,286,.LM48-.LFBB5
 420               	.LM48:
 421 008a E114      		cp r14,__zero_reg__
 422 008c F104      		cpc r15,__zero_reg__
 423 008e 01F4      		brne .L8
 424 0090 0150      		subi r16,1
 425 0092 1109      		sbc r17,__zero_reg__
 426               	.L6:
 284:tft.h         **** 	while (x--) {
 427               		.stabn	68,0,284,.LM49-.LFBB5
 428               	.LM49:
 429 0094 0115      		cp r16,__zero_reg__
 430 0096 1105      		cpc r17,__zero_reg__
 431 0098 01F4      		brne .L9
 432               	/* epilogue start */
 433               	.LBE164:
 291:tft.h         **** }
 434               		.stabn	68,0,291,.LM50-.LFBB5
 435               	.LM50:
 436 009a DF91      		pop r29
 437 009c CF91      		pop r28
 438 009e 1F91      		pop r17
 439 00a0 0F91      		pop r16
 440 00a2 FF90      		pop r15
 441 00a4 EF90      		pop r14
 442 00a6 DF90      		pop r13
 443 00a8 CF90      		pop r12
 444 00aa 0895      		ret
 445               		.size	_ZN5tft_t4fillEj, .-_ZN5tft_t4fillEj
 446               		.stabs	"x:r(0,31)",64,0,281,16
 447               		.stabs	"y:r(0,31)",64,0,281,14
 448               		.stabn	192,0,0,.LBB164-.LFBB5
 449               		.stabn	224,0,0,.LBE164-.LFBB5
 450               	.Lscope5:
 451               		.stabs	"",36,0,0,.Lscope5-.LFBB5
 452               		.stabd	78,0,0
 453               		.section	.text._ZN5tft_t7newlineEv,"axG",@progbits,_ZN5tft_t7newlineEv,comdat
 454               		.stabs	"_ZN5tft_t7newlineEv:F(0,4)",36,0,263,_ZN5tft_t7newlineEv
 455               		.stabs	"this:P(0,111)",64,0,263,28
 456               		.weak	_ZN5tft_t7newlineEv
 457               		.type	_ZN5tft_t7newlineEv, @function
 458               	_ZN5tft_t7newlineEv:
 459               		.stabd	46,0,0
 264:tft.h         **** {
 460               		.stabn	68,0,264,.LM51-.LFBB6
 461               	.LM51:
 462               	.LFBB6:
 463 0000 CF93      		push r28
 464 0002 DF93      		push r29
 465               	/* prologue: function */
 466               	/* frame size = 0 */
 467               	/* stack size = 2 */
 468               	.L__stack_usage = 2
 469 0004 EC01      		movw r28,r24
 470               	.LBB191:
 471               	.LBB192:
GAS LISTING /tmp/ccHDklfR.s 			page 19


  32:tft.h         **** 	inline void setX(uint16_t x) {d.x = x;}
 472               		.stabn	68,0,32,.LM52-.LFBB6
 473               	.LM52:
 474 0006 1C82      		std Y+4,__zero_reg__
 475 0008 1B82      		std Y+3,__zero_reg__
 476               		.stabs	"tft.cpp",132,0,0,.Ltext7
 477               	.Ltext7:
 478               		.stabn	68,0,134,.LM53-.LFBB6
 479               	.LM53:
 480 000a 2881      		ld r18,Y
 481               	.LBE192:
 482               	.LBE191:
 483               		.stabs	"tft.h",132,0,0,.Ltext8
 484               	.Ltext8:
 266:tft.h         **** 	setY(y() + HEIGHT * zoom());
 485               		.stabn	68,0,266,.LM54-.LFBB6
 486               	.LM54:
 487 000c 88E0      		ldi r24,lo8(8)
 488 000e 289F      		mul r18,r24
 489 0010 9001      		movw r18,r0
 490 0012 1124      		clr __zero_reg__
 491 0014 8D81      		ldd r24,Y+5
 492 0016 9E81      		ldd r25,Y+6
 493 0018 820F      		add r24,r18
 494 001a 931F      		adc r25,r19
 495               	.LBB193:
 496               	.LBB194:
  33:tft.h         **** 	inline void setY(uint16_t y) {d.y = y;}
 497               		.stabn	68,0,33,.LM55-.LFBB6
 498               	.LM55:
 499 001c 9E83      		std Y+6,r25
 500 001e 8D83      		std Y+5,r24
 501               	.LBE194:
 502               	.LBE193:
 267:tft.h         **** 	if (y() + HEIGHT * zoom() > height()) {
 503               		.stabn	68,0,267,.LM56-.LFBB6
 504               	.LM56:
 505 0020 820F      		add r24,r18
 506 0022 931F      		adc r25,r19
 507 0024 4985      		ldd r20,Y+9
 508 0026 5A85      		ldd r21,Y+10
 509 0028 4817      		cp r20,r24
 510 002a 5907      		cpc r21,r25
 511 002c 00F4      		brsh .L10
 512               	.LBB195:
 513               	.LBB196:
 272:tft.h         **** 		fill(background());
 514               		.stabn	68,0,272,.LM57-.LFBB6
 515               	.LM57:
 516 002e 6D85      		ldd r22,Y+13
 517 0030 7E85      		ldd r23,Y+14
 518 0032 CE01      		movw r24,r28
 519 0034 0E94 0000 		call _ZN5tft_t4fillEj
 520               	.LBB197:
 521               	.LBB198:
  33:tft.h         **** 	inline void setY(uint16_t y) {d.y = y;}
 522               		.stabn	68,0,33,.LM58-.LFBB6
GAS LISTING /tmp/ccHDklfR.s 			page 20


 523               	.LM58:
 524 0038 1E82      		std Y+6,__zero_reg__
 525 003a 1D82      		std Y+5,__zero_reg__
 526               	.L10:
 527               	/* epilogue start */
 528               	.LBE198:
 529               	.LBE197:
 530               	.LBE196:
 531               	.LBE195:
 276:tft.h         **** }
 532               		.stabn	68,0,276,.LM59-.LFBB6
 533               	.LM59:
 534 003c DF91      		pop r29
 535 003e CF91      		pop r28
 536 0040 0895      		ret
 537               		.size	_ZN5tft_t7newlineEv, .-_ZN5tft_t7newlineEv
 538               	.Lscope6:
 539               		.stabs	"",36,0,0,.Lscope6-.LFBB6
 540               		.stabd	78,0,0
 541               		.section	.text._ZN5tft_t4nextEv,"axG",@progbits,_ZN5tft_t4nextEv,comdat
 542               		.stabs	"_ZN5tft_t4nextEv:F(0,4)",36,0,321,_ZN5tft_t4nextEv
 543               		.stabs	"this:P(0,111)",64,0,321,24
 544               		.weak	_ZN5tft_t4nextEv
 545               		.type	_ZN5tft_t4nextEv, @function
 546               	_ZN5tft_t4nextEv:
 547               		.stabd	46,0,0
 319:tft.h         **** }
 320:tft.h         **** 
 321:tft.h         **** inline void tft_t::next(void)
 322:tft.h         **** {
 548               		.stabn	68,0,322,.LM60-.LFBB7
 549               	.LM60:
 550               	.LFBB7:
 551               	/* prologue: function */
 552               	/* frame size = 0 */
 553               	/* stack size = 0 */
 554               	.L__stack_usage = 0
 555               		.stabs	"tft.cpp",132,0,0,.Ltext9
 556               	.Ltext9:
 557               		.stabn	68,0,134,.LM61-.LFBB7
 558               	.LM61:
 559 0000 FC01      		movw r30,r24
 560 0002 4081      		ld r20,Z
 561               		.stabs	"tft.h",132,0,0,.Ltext10
 562               	.Ltext10:
 323:tft.h         **** 	setX(x() + WIDTH * zoom());
 563               		.stabn	68,0,323,.LM62-.LFBB7
 564               	.LM62:
 565 0004 F6E0      		ldi r31,lo8(6)
 566 0006 4F9F      		mul r20,r31
 567 0008 A001      		movw r20,r0
 568 000a 1124      		clr __zero_reg__
 569 000c FC01      		movw r30,r24
 570 000e 2381      		ldd r18,Z+3
 571 0010 3481      		ldd r19,Z+4
 572 0012 240F      		add r18,r20
 573 0014 351F      		adc r19,r21
GAS LISTING /tmp/ccHDklfR.s 			page 21


 574               	.LBB199:
 575               	.LBB200:
  32:tft.h         **** 	inline void setX(uint16_t x) {d.x = x;}
 576               		.stabn	68,0,32,.LM63-.LFBB7
 577               	.LM63:
 578 0016 3483      		std Z+4,r19
 579 0018 2383      		std Z+3,r18
 580               	.LBE200:
 581               	.LBE199:
 324:tft.h         **** 	if (x() + WIDTH * zoom() > width())
 582               		.stabn	68,0,324,.LM64-.LFBB7
 583               	.LM64:
 584 001a 240F      		add r18,r20
 585 001c 351F      		adc r19,r21
 586 001e 6781      		ldd r22,Z+7
 587 0020 7085      		ldd r23,Z+8
 588 0022 6217      		cp r22,r18
 589 0024 7307      		cpc r23,r19
 590 0026 00F4      		brsh .L12
 325:tft.h         **** 		newline();
 591               		.stabn	68,0,325,.LM65-.LFBB7
 592               	.LM65:
 593 0028 0C94 0000 		jmp _ZN5tft_t7newlineEv
 594               	.L12:
 595 002c 0895      		ret
 596               		.size	_ZN5tft_t4nextEv, .-_ZN5tft_t4nextEv
 597               	.Lscope7:
 598               		.stabs	"",36,0,0,.Lscope7-.LFBB7
 599               		.stabd	78,0,0
 600               		.text
 601               		.stabs	"_ZN5tft_tC2Ev:F(0,4)",36,0,21,_ZN5tft_tC2Ev
 602               		.stabs	"this:P(0,111)",64,0,21,30
 603               	.global	_ZN5tft_tC2Ev
 604               		.type	_ZN5tft_tC2Ev, @function
 605               	_ZN5tft_tC2Ev:
 606               		.stabd	46,0,0
 607               		.stabs	"tft.cpp",132,0,0,.Ltext11
 608               	.Ltext11:
  21:tft.cpp       **** tft_t::tft_t(void)
 609               		.stabn	68,0,21,.LM66-.LFBB8
 610               	.LM66:
 611               	.LFBB8:
 612               	/* prologue: function */
 613               	/* frame size = 0 */
 614               	/* stack size = 0 */
 615               	.L__stack_usage = 0
 616 00aa FC01      		movw r30,r24
 617               	.LBB201:
 618               	.LBB202:
 619               	.LBB203:
 620               		.stabs	"tft.h",132,0,0,.Ltext12
 621               	.Ltext12:
  32:tft.h         **** 	inline void setX(uint16_t x) {d.x = x;}
 622               		.stabn	68,0,32,.LM67-.LFBB8
 623               	.LM67:
 624 00ac 1482      		std Z+4,__zero_reg__
 625 00ae 1382      		std Z+3,__zero_reg__
GAS LISTING /tmp/ccHDklfR.s 			page 22


 626               	.LBE203:
 627               	.LBE202:
 628               	.LBB204:
 629               	.LBB205:
  33:tft.h         **** 	inline void setY(uint16_t y) {d.y = y;}
 630               		.stabn	68,0,33,.LM68-.LFBB8
 631               	.LM68:
 632 00b0 1682      		std Z+6,__zero_reg__
 633 00b2 1582      		std Z+5,__zero_reg__
 634               	.LBE205:
 635               	.LBE204:
 636               	.LBB206:
 637               	.LBB207:
  37:tft.h         **** 	inline void setZoom(const uint8_t zoom) {d.zoom = zoom;}
 638               		.stabn	68,0,37,.LM69-.LFBB8
 639               	.LM69:
 640 00b4 81E0      		ldi r24,lo8(1)
 641 00b6 8083      		st Z,r24
 642               	.LBE207:
 643               	.LBE206:
 644               		.stabs	"tft.cpp",132,0,0,.Ltext13
 645               	.Ltext13:
  26:tft.cpp       **** 	d.orient = Portrait;
 646               		.stabn	68,0,26,.LM70-.LFBB8
 647               	.LM70:
 648 00b8 8183      		std Z+1,r24
 649               	.LBB208:
 650               	.LBB209:
 651               		.stabs	"tft.h",132,0,0,.Ltext14
 652               	.Ltext14:
  46:tft.h         **** 	inline void setTabSize(uint8_t t) {d.tabSize = t;}
 653               		.stabn	68,0,46,.LM71-.LFBB8
 654               	.LM71:
 655 00ba 84E0      		ldi r24,lo8(4)
 656 00bc 8283      		std Z+2,r24
 657               	.LBE209:
 658               	.LBE208:
 659               	.LBB210:
 660               	.LBB211:
  73:tft.h         **** 	inline void setWidth(const uint16_t w) {d.w = w;}
 661               		.stabn	68,0,73,.LM72-.LFBB8
 662               	.LM72:
 663 00be 80EF      		ldi r24,lo8(-16)
 664 00c0 90E0      		ldi r25,0
 665 00c2 9087      		std Z+8,r25
 666 00c4 8783      		std Z+7,r24
 667               	.LBE211:
 668               	.LBE210:
 669               	.LBB212:
 670               	.LBB213:
  74:tft.h         **** 	inline void setHeight(const uint16_t h) {d.h = h;}
 671               		.stabn	68,0,74,.LM73-.LFBB8
 672               	.LM73:
 673 00c6 80E4      		ldi r24,lo8(64)
 674 00c8 91E0      		ldi r25,lo8(1)
 675 00ca 9287      		std Z+10,r25
 676 00cc 8187      		std Z+9,r24
GAS LISTING /tmp/ccHDklfR.s 			page 23


 677               	.LBE213:
 678               	.LBE212:
 679               	.LBB214:
 680               	.LBB215:
  39:tft.h         **** 	inline void setForeground(uint16_t c) {d.fgc = c;}
 681               		.stabn	68,0,39,.LM74-.LFBB8
 682               	.LM74:
 683 00ce 8FEF      		ldi r24,lo8(-1)
 684 00d0 9FEF      		ldi r25,lo8(-1)
 685 00d2 9487      		std Z+12,r25
 686 00d4 8387      		std Z+11,r24
 687               	.LBE215:
 688               	.LBE214:
 689               	.LBB216:
 690               	.LBB217:
  40:tft.h         **** 	inline void setBackground(uint16_t c) {d.bgc = c;}
 691               		.stabn	68,0,40,.LM75-.LFBB8
 692               	.LM75:
 693 00d6 1686      		std Z+14,__zero_reg__
 694 00d8 1586      		std Z+13,__zero_reg__
 695 00da 0895      		ret
 696               	.LBE217:
 697               	.LBE216:
 698               	.LBE201:
 699               		.size	_ZN5tft_tC2Ev, .-_ZN5tft_tC2Ev
 700               	.Lscope8:
 701               		.stabs	"",36,0,0,.Lscope8-.LFBB8
 702               		.stabd	78,0,0
 703               	.global	_ZN5tft_tC1Ev
 704               		.set	_ZN5tft_tC1Ev,_ZN5tft_tC2Ev
 705               		.stabs	"_ZN5tft_t9rectangleEjjjjj:F(0,4)",36,0,86,_ZN5tft_t9rectangleEjjjjj
 706               		.stabs	"this:P(0,111)",64,0,87,24
 707               		.stabs	"x:P(0,31)",64,0,86,24
 708               		.stabs	"y:P(0,31)",64,0,86,22
 709               		.stabs	"w:P(0,31)",64,0,86,28
 710               		.stabs	"h:P(0,31)",64,0,86,16
 711               	.global	_ZN5tft_t9rectangleEjjjjj
 712               		.type	_ZN5tft_t9rectangleEjjjjj, @function
 713               	_ZN5tft_t9rectangleEjjjjj:
 714               		.stabd	46,0,0
 715               		.stabs	"tft.cpp",132,0,0,.Ltext15
 716               	.Ltext15:
  88:tft.cpp       **** {
 717               		.stabn	68,0,88,.LM76-.LFBB9
 718               	.LM76:
 719               	.LFBB9:
 720 00dc CF92      		push r12
 721 00de DF92      		push r13
 722 00e0 EF92      		push r14
 723 00e2 FF92      		push r15
 724 00e4 0F93      		push r16
 725 00e6 1F93      		push r17
 726 00e8 CF93      		push r28
 727 00ea DF93      		push r29
 728               	/* prologue: function */
 729               	/* frame size = 0 */
 730               	/* stack size = 8 */
GAS LISTING /tmp/ccHDklfR.s 			page 24


 731               	.L__stack_usage = 8
 732 00ec CB01      		movw r24,r22
 733 00ee BA01      		movw r22,r20
 734 00f0 E901      		movw r28,r18
  89:tft.cpp       **** 	area(x, y, w, h);
 735               		.stabn	68,0,89,.LM77-.LFBB9
 736               	.LM77:
 737 00f2 9801      		movw r18,r16
 738 00f4 AE01      		movw r20,r28
 739 00f6 0E94 0000 		call _ZN5tft_t4areaEjjjj.isra.16
  90:tft.cpp       **** 	cmd(0x2C);			// Memory Write
 740               		.stabn	68,0,90,.LM78-.LFBB9
 741               	.LM78:
 742 00fa 8CE2      		ldi r24,lo8(44)
 743 00fc 0E94 0000 		call _ZN7ili93413cmdEh
  91:tft.cpp       **** 	while (w--)
 744               		.stabn	68,0,91,.LM79-.LFBB9
 745               	.LM79:
 746 0100 00C0      		rjmp .L16
 747               	.L17:
  93:tft.cpp       **** 			data(c / 0x0100);
 748               		.stabn	68,0,93,.LM80-.LFBB9
 749               	.LM80:
 750 0102 8F2D      		mov r24,r15
 751 0104 0E94 0000 		call _ZN7ili93414dataEh
  94:tft.cpp       **** 			data(c % 0x0100);
 752               		.stabn	68,0,94,.LM81-.LFBB9
 753               	.LM81:
 754 0108 8E2D      		mov r24,r14
 755 010a 0E94 0000 		call _ZN7ili93414dataEh
  92:tft.cpp       **** 		for (y = 0; y < h; y++) {
 756               		.stabn	68,0,92,.LM82-.LFBB9
 757               	.LM82:
 758 010e 8FEF      		ldi r24,-1
 759 0110 C81A      		sub r12,r24
 760 0112 D80A      		sbc r13,r24
 761 0114 00C0      		rjmp .L18
 762               	.L19:
  91:tft.cpp       **** 	while (w--)
 763               		.stabn	68,0,91,.LM83-.LFBB9
 764               	.LM83:
 765 0116 C12C      		mov r12,__zero_reg__
 766 0118 D12C      		mov r13,__zero_reg__
 767               	.L18:
  92:tft.cpp       **** 		for (y = 0; y < h; y++) {
 768               		.stabn	68,0,92,.LM84-.LFBB9
 769               	.LM84:
 770 011a C016      		cp r12,r16
 771 011c D106      		cpc r13,r17
 772 011e 01F4      		brne .L17
 773 0120 2197      		sbiw r28,1
 774               	.L16:
  91:tft.cpp       **** 	while (w--)
 775               		.stabn	68,0,91,.LM85-.LFBB9
 776               	.LM85:
 777 0122 2097      		sbiw r28,0
 778 0124 01F4      		brne .L19
GAS LISTING /tmp/ccHDklfR.s 			page 25


 779               	/* epilogue start */
  96:tft.cpp       **** }
 780               		.stabn	68,0,96,.LM86-.LFBB9
 781               	.LM86:
 782 0126 DF91      		pop r29
 783 0128 CF91      		pop r28
 784 012a 1F91      		pop r17
 785 012c 0F91      		pop r16
 786 012e FF90      		pop r15
 787 0130 EF90      		pop r14
 788 0132 DF90      		pop r13
 789 0134 CF90      		pop r12
 790 0136 0895      		ret
 791               		.size	_ZN5tft_t9rectangleEjjjjj, .-_ZN5tft_t9rectangleEjjjjj
 792               	.Lscope9:
 793               		.stabs	"",36,0,0,.Lscope9-.LFBB9
 794               		.stabd	78,0,0
 795               		.stabs	"_ZN5tft_t4lineEjjjjj:F(0,4)",36,0,43,_ZN5tft_t4lineEjjjjj
 796               		.stabs	"this:P(0,111)",64,0,44,24
 797               		.stabs	"x0:P(0,31)",64,0,43,10
 798               		.stabs	"y0:P(0,31)",64,0,43,12
 799               		.stabs	"x1:P(0,31)",64,0,43,28
 800               		.stabs	"y1:P(0,31)",64,0,43,16
 801               		.stabs	"c:P(0,31)",64,0,44,14
 802               	.global	_ZN5tft_t4lineEjjjjj
 803               		.type	_ZN5tft_t4lineEjjjjj, @function
 804               	_ZN5tft_t4lineEjjjjj:
 805               		.stabd	46,0,0
  45:tft.cpp       **** {
 806               		.stabn	68,0,45,.LM87-.LFBB10
 807               	.LM87:
 808               	.LFBB10:
 809 0138 4F92      		push r4
 810 013a 5F92      		push r5
 811 013c 6F92      		push r6
 812 013e 7F92      		push r7
 813 0140 8F92      		push r8
 814 0142 9F92      		push r9
 815 0144 AF92      		push r10
 816 0146 BF92      		push r11
 817 0148 CF92      		push r12
 818 014a DF92      		push r13
 819 014c EF92      		push r14
 820 014e FF92      		push r15
 821 0150 0F93      		push r16
 822 0152 1F93      		push r17
 823 0154 CF93      		push r28
 824 0156 DF93      		push r29
 825               	/* prologue: function */
 826               	/* frame size = 0 */
 827               	/* stack size = 16 */
 828               	.L__stack_usage = 16
 829 0158 5B01      		movw r10,r22
 830 015a 6A01      		movw r12,r20
 831 015c E901      		movw r28,r18
 832               	.LBB218:
 833               	.LBB219:
GAS LISTING /tmp/ccHDklfR.s 			page 26


 834               	.LBB220:
 835               	.LBB221:
 836               		.stabn	68,0,134,.LM88-.LFBB10
 837               	.LM88:
 838 015e FC01      		movw r30,r24
 839 0160 2781      		ldd r18,Z+7
 840 0162 3085      		ldd r19,Z+8
 841               	.LBE221:
 842               	.LBE220:
 843               	.LBE219:
  46:tft.cpp       **** 	if (x0 > width())
 844               		.stabn	68,0,46,.LM89-.LFBB10
 845               	.LM89:
 846 0164 2617      		cp r18,r22
 847 0166 3707      		cpc r19,r23
 848 0168 00F4      		brsh .L21
  47:tft.cpp       **** 		x0 = width() - 1;
 849               		.stabn	68,0,47,.LM90-.LFBB10
 850               	.LM90:
 851 016a 5901      		movw r10,r18
 852 016c F1E0      		ldi r31,1
 853 016e AF1A      		sub r10,r31
 854 0170 B108      		sbc r11,__zero_reg__
 855               	.L21:
  48:tft.cpp       **** 	if (x1 > width())
 856               		.stabn	68,0,48,.LM91-.LFBB10
 857               	.LM91:
 858 0172 2C17      		cp r18,r28
 859 0174 3D07      		cpc r19,r29
 860 0176 00F4      		brsh .L22
  49:tft.cpp       **** 		x1 = width() - 1;
 861               		.stabn	68,0,49,.LM92-.LFBB10
 862               	.LM92:
 863 0178 E901      		movw r28,r18
 864 017a 2197      		sbiw r28,1
 865               	.L22:
 866               		.stabn	68,0,134,.LM93-.LFBB10
 867               	.LM93:
 868 017c FC01      		movw r30,r24
 869 017e 2185      		ldd r18,Z+9
 870 0180 3285      		ldd r19,Z+10
  50:tft.cpp       **** 	if (y0 > height())
 871               		.stabn	68,0,50,.LM94-.LFBB10
 872               	.LM94:
 873 0182 2C15      		cp r18,r12
 874 0184 3D05      		cpc r19,r13
 875 0186 00F4      		brsh .L23
  51:tft.cpp       **** 		y0 = height() - 1;
 876               		.stabn	68,0,51,.LM95-.LFBB10
 877               	.LM95:
 878 0188 6901      		movw r12,r18
 879 018a F1E0      		ldi r31,1
 880 018c CF1A      		sub r12,r31
 881 018e D108      		sbc r13,__zero_reg__
 882               	.L23:
  52:tft.cpp       **** 	if (y1 > height())
 883               		.stabn	68,0,52,.LM96-.LFBB10
GAS LISTING /tmp/ccHDklfR.s 			page 27


 884               	.LM96:
 885 0190 2017      		cp r18,r16
 886 0192 3107      		cpc r19,r17
 887 0194 00F4      		brsh .L24
  53:tft.cpp       **** 		y1 = height() - 1;
 888               		.stabn	68,0,53,.LM97-.LFBB10
 889               	.LM97:
 890 0196 8901      		movw r16,r18
 891 0198 0150      		subi r16,1
 892 019a 1109      		sbc r17,__zero_reg__
 893               	.L24:
  54:tft.cpp       **** 	if (x0 == x1) {
 894               		.stabn	68,0,54,.LM98-.LFBB10
 895               	.LM98:
 896 019c AC16      		cp r10,r28
 897 019e BD06      		cpc r11,r29
 898 01a0 01F4      		brne .L25
  55:tft.cpp       **** 		if (y0 > y1)
 899               		.stabn	68,0,55,.LM99-.LFBB10
 900               	.LM99:
 901 01a2 0C15      		cp r16,r12
 902 01a4 1D05      		cpc r17,r13
 903 01a6 00F4      		brsh .L26
  56:tft.cpp       **** 			SWAP(y0, y1);
 904               		.stabn	68,0,56,.LM100-.LFBB10
 905               	.LM100:
 906 01a8 C026      		eor r12,r16
 907 01aa D126      		eor r13,r17
 908 01ac 0C25      		eor r16,r12
 909 01ae 1D25      		eor r17,r13
 910 01b0 C026      		eor r12,r16
 911 01b2 D126      		eor r13,r17
 912               	.L26:
  57:tft.cpp       **** 		rectangle(x0, y0, 1, y1 - y0, c);
 913               		.stabn	68,0,57,.LM101-.LFBB10
 914               	.LM101:
 915 01b4 0C19      		sub r16,r12
 916 01b6 1D09      		sbc r17,r13
 917 01b8 21E0      		ldi r18,lo8(1)
 918 01ba 30E0      		ldi r19,0
 919 01bc 00C0      		rjmp .L44
 920               	.L25:
  60:tft.cpp       **** 	if (y0 == y1) {
 921               		.stabn	68,0,60,.LM102-.LFBB10
 922               	.LM102:
 923 01be C016      		cp r12,r16
 924 01c0 D106      		cpc r13,r17
 925 01c2 01F4      		brne .L28
  61:tft.cpp       **** 		if (x0 > x1)
 926               		.stabn	68,0,61,.LM103-.LFBB10
 927               	.LM103:
 928 01c4 CA15      		cp r28,r10
 929 01c6 DB05      		cpc r29,r11
 930 01c8 00F4      		brsh .L29
  62:tft.cpp       **** 			SWAP(x0, x1);
 931               		.stabn	68,0,62,.LM104-.LFBB10
 932               	.LM104:
GAS LISTING /tmp/ccHDklfR.s 			page 28


 933 01ca AC26      		eor r10,r28
 934 01cc BD26      		eor r11,r29
 935 01ce CA25      		eor r28,r10
 936 01d0 DB25      		eor r29,r11
 937 01d2 AC26      		eor r10,r28
 938 01d4 BD26      		eor r11,r29
 939               	.L29:
  63:tft.cpp       **** 		rectangle(x0, y0, x1 - x0, 1, c);
 940               		.stabn	68,0,63,.LM105-.LFBB10
 941               	.LM105:
 942 01d6 9E01      		movw r18,r28
 943 01d8 2A19      		sub r18,r10
 944 01da 3B09      		sbc r19,r11
 945 01dc 01E0      		ldi r16,lo8(1)
 946 01de 10E0      		ldi r17,0
 947               	.L44:
 948 01e0 A601      		movw r20,r12
 949 01e2 B501      		movw r22,r10
 950 01e4 0E94 0000 		call _ZN5tft_t9rectangleEjjjjj
  64:tft.cpp       **** 		return;
 951               		.stabn	68,0,64,.LM106-.LFBB10
 952               	.LM106:
 953 01e8 00C0      		rjmp .L20
 954               	.L28:
  66:tft.cpp       **** 	uint16_t dx = abs(x1 - x0), dy = abs(y1 - y0);
 955               		.stabn	68,0,66,.LM107-.LFBB10
 956               	.LM107:
 957 01ea 4E01      		movw r8,r28
 958 01ec 8A18      		sub r8,r10
 959 01ee 9B08      		sbc r9,r11
 960 01f0 97FE      		sbrs r9,7
 961 01f2 00C0      		rjmp .L30
 962 01f4 9194      		neg r9
 963 01f6 8194      		neg r8
 964 01f8 9108      		sbc r9,__zero_reg__
 965               	.L30:
 966 01fa 3801      		movw r6,r16
 967 01fc 6C18      		sub r6,r12
 968 01fe 7D08      		sbc r7,r13
 969 0200 77FE      		sbrs r7,7
 970 0202 00C0      		rjmp .L31
 971 0204 7194      		neg r7
 972 0206 6194      		neg r6
 973 0208 7108      		sbc r7,__zero_reg__
 974               	.L31:
 975               	.LBB226:
  67:tft.cpp       **** 	if (dx < dy) {
 976               		.stabn	68,0,67,.LM108-.LFBB10
 977               	.LM108:
 978 020a 8614      		cp r8,r6
 979 020c 9704      		cpc r9,r7
 980 020e 00F4      		brsh .L32
 981               	.LBB223:
  68:tft.cpp       **** 		if (y0 > y1) {
 982               		.stabn	68,0,68,.LM109-.LFBB10
 983               	.LM109:
 984 0210 0C15      		cp r16,r12
GAS LISTING /tmp/ccHDklfR.s 			page 29


 985 0212 1D05      		cpc r17,r13
 986 0214 00F4      		brsh .L33
  69:tft.cpp       **** 			SWAP(x0, x1);
 987               		.stabn	68,0,69,.LM110-.LFBB10
 988               	.LM110:
 989 0216 AC26      		eor r10,r28
 990 0218 BD26      		eor r11,r29
 991 021a CA25      		eor r28,r10
 992 021c DB25      		eor r29,r11
 993 021e AC26      		eor r10,r28
 994 0220 BD26      		eor r11,r29
  70:tft.cpp       **** 			SWAP(y0, y1);
 995               		.stabn	68,0,70,.LM111-.LFBB10
 996               	.LM111:
 997 0222 C026      		eor r12,r16
 998 0224 D126      		eor r13,r17
 999 0226 0C25      		eor r16,r12
 1000 0228 1D25      		eor r17,r13
 1001 022a C026      		eor r12,r16
 1002 022c D126      		eor r13,r17
 1003               	.L33:
 1004               	.LBB224:
  72:tft.cpp       **** 		for (uint16_t y = y0; y <= y1; y++)
 1005               		.stabn	68,0,72,.LM112-.LFBB10
 1006               	.LM112:
 1007 022e 412C      		mov r4,__zero_reg__
 1008 0230 512C      		mov r5,__zero_reg__
 1009 0232 00C0      		rjmp .L34
 1010               	.L36:
  74:tft.cpp       **** 					(x0 > x1 ? -1 : 1), y, c);
 1011               		.stabn	68,0,74,.LM113-.LFBB10
 1012               	.LM113:
 1013 0234 C201      		movw r24,r4
 1014 0236 B301      		movw r22,r6
 1015 0238 0E94 0000 		call __udivmodhi4
 1016 023c CA15      		cp r28,r10
 1017 023e DB05      		cpc r29,r11
 1018 0240 00F4      		brsh .L42
 1019 0242 2FEF      		ldi r18,lo8(-1)
 1020 0244 3FEF      		ldi r19,lo8(-1)
 1021 0246 00C0      		rjmp .L35
 1022               	.L42:
 1023 0248 21E0      		ldi r18,lo8(1)
 1024 024a 30E0      		ldi r19,0
 1025               	.L35:
  74:tft.cpp       **** 					(x0 > x1 ? -1 : 1), y, c);
 1026               		.stabn	68,0,74,.LM114-.LFBB10
 1027               	.LM114:
 1028 024c 269F      		mul r18,r22
 1029 024e C001      		movw r24,r0
 1030 0250 279F      		mul r18,r23
 1031 0252 900D      		add r25,r0
 1032 0254 369F      		mul r19,r22
 1033 0256 900D      		add r25,r0
 1034 0258 1124      		clr r1
 1035 025a A701      		movw r20,r14
 1036 025c B601      		movw r22,r12
GAS LISTING /tmp/ccHDklfR.s 			page 30


 1037 025e 8A0D      		add r24,r10
 1038 0260 9B1D      		adc r25,r11
 1039 0262 0E94 0000 		call _ZN5tft_t5pointEjjj.isra.17
  72:tft.cpp       **** 		for (uint16_t y = y0; y <= y1; y++)
 1040               		.stabn	68,0,72,.LM115-.LFBB10
 1041               	.LM115:
 1042 0266 4FEF      		ldi r20,-1
 1043 0268 C41A      		sub r12,r20
 1044 026a D40A      		sbc r13,r20
 1045 026c 480C      		add r4,r8
 1046 026e 591C      		adc r5,r9
 1047               	.L34:
  72:tft.cpp       **** 		for (uint16_t y = y0; y <= y1; y++)
 1048               		.stabn	68,0,72,.LM116-.LFBB10
 1049               	.LM116:
 1050 0270 0C15      		cp r16,r12
 1051 0272 1D05      		cpc r17,r13
 1052 0274 00F4      		brsh .L36
 1053 0276 00C0      		rjmp .L20
 1054               	.L32:
 1055               	.LBE224:
 1056               	.LBE223:
 1057               	.LBB225:
  76:tft.cpp       **** 		if (x0 > x1) {
 1058               		.stabn	68,0,76,.LM117-.LFBB10
 1059               	.LM117:
 1060 0278 CA15      		cp r28,r10
 1061 027a DB05      		cpc r29,r11
 1062 027c 00F4      		brsh .L37
  77:tft.cpp       **** 			SWAP(x0, x1);
 1063               		.stabn	68,0,77,.LM118-.LFBB10
 1064               	.LM118:
 1065 027e AC26      		eor r10,r28
 1066 0280 BD26      		eor r11,r29
 1067 0282 CA25      		eor r28,r10
 1068 0284 DB25      		eor r29,r11
 1069 0286 AC26      		eor r10,r28
 1070 0288 BD26      		eor r11,r29
  78:tft.cpp       **** 			SWAP(y0, y1);
 1071               		.stabn	68,0,78,.LM119-.LFBB10
 1072               	.LM119:
 1073 028a C026      		eor r12,r16
 1074 028c D126      		eor r13,r17
 1075 028e 0C25      		eor r16,r12
 1076 0290 1D25      		eor r17,r13
 1077 0292 C026      		eor r12,r16
 1078 0294 D126      		eor r13,r17
 1079               	.L37:
 1080               	.LBB222:
  80:tft.cpp       **** 		for (uint16_t x = x0; x <= x1; x++)
 1081               		.stabn	68,0,80,.LM120-.LFBB10
 1082               	.LM120:
 1083 0296 412C      		mov r4,__zero_reg__
 1084 0298 512C      		mov r5,__zero_reg__
 1085 029a 00C0      		rjmp .L38
 1086               	.L40:
  82:tft.cpp       **** 					(y0 > y1 ? -1 : 1), c);
GAS LISTING /tmp/ccHDklfR.s 			page 31


 1087               		.stabn	68,0,82,.LM121-.LFBB10
 1088               	.LM121:
 1089 029c C201      		movw r24,r4
 1090 029e B401      		movw r22,r8
 1091 02a0 0E94 0000 		call __udivmodhi4
 1092 02a4 0C15      		cp r16,r12
 1093 02a6 1D05      		cpc r17,r13
 1094 02a8 00F4      		brsh .L43
 1095 02aa 2FEF      		ldi r18,lo8(-1)
 1096 02ac 3FEF      		ldi r19,lo8(-1)
 1097 02ae 00C0      		rjmp .L39
 1098               	.L43:
 1099 02b0 21E0      		ldi r18,lo8(1)
 1100 02b2 30E0      		ldi r19,0
 1101               	.L39:
  82:tft.cpp       **** 					(y0 > y1 ? -1 : 1), c);
 1102               		.stabn	68,0,82,.LM122-.LFBB10
 1103               	.LM122:
 1104 02b4 269F      		mul r18,r22
 1105 02b6 C001      		movw r24,r0
 1106 02b8 279F      		mul r18,r23
 1107 02ba 900D      		add r25,r0
 1108 02bc 369F      		mul r19,r22
 1109 02be 900D      		add r25,r0
 1110 02c0 1124      		clr r1
 1111 02c2 8C0D      		add r24,r12
 1112 02c4 9D1D      		adc r25,r13
 1113 02c6 A701      		movw r20,r14
 1114 02c8 BC01      		movw r22,r24
 1115 02ca C501      		movw r24,r10
 1116 02cc 0E94 0000 		call _ZN5tft_t5pointEjjj.isra.17
  80:tft.cpp       **** 		for (uint16_t x = x0; x <= x1; x++)
 1117               		.stabn	68,0,80,.LM123-.LFBB10
 1118               	.LM123:
 1119 02d0 8FEF      		ldi r24,-1
 1120 02d2 A81A      		sub r10,r24
 1121 02d4 B80A      		sbc r11,r24
 1122 02d6 460C      		add r4,r6
 1123 02d8 571C      		adc r5,r7
 1124               	.L38:
  80:tft.cpp       **** 		for (uint16_t x = x0; x <= x1; x++)
 1125               		.stabn	68,0,80,.LM124-.LFBB10
 1126               	.LM124:
 1127 02da CA15      		cp r28,r10
 1128 02dc DB05      		cpc r29,r11
 1129 02de 00F4      		brsh .L40
 1130               	.L20:
 1131               	/* epilogue start */
 1132               	.LBE222:
 1133               	.LBE225:
 1134               	.LBE226:
 1135               	.LBE218:
  84:tft.cpp       **** }
 1136               		.stabn	68,0,84,.LM125-.LFBB10
 1137               	.LM125:
 1138 02e0 DF91      		pop r29
 1139 02e2 CF91      		pop r28
GAS LISTING /tmp/ccHDklfR.s 			page 32


 1140 02e4 1F91      		pop r17
 1141 02e6 0F91      		pop r16
 1142 02e8 FF90      		pop r15
 1143 02ea EF90      		pop r14
 1144 02ec DF90      		pop r13
 1145 02ee CF90      		pop r12
 1146 02f0 BF90      		pop r11
 1147 02f2 AF90      		pop r10
 1148 02f4 9F90      		pop r9
 1149 02f6 8F90      		pop r8
 1150 02f8 7F90      		pop r7
 1151 02fa 6F90      		pop r6
 1152 02fc 5F90      		pop r5
 1153 02fe 4F90      		pop r4
 1154 0300 0895      		ret
 1155               		.size	_ZN5tft_t4lineEjjjjj, .-_ZN5tft_t4lineEjjjjj
 1156               		.stabs	"x:r(0,31)",64,0,80,10
 1157               		.stabn	192,0,0,.LBB221-.LFBB10
 1158               		.stabn	224,0,0,.LBE221-.LFBB10
 1159               		.stabs	"x:r(0,31)",64,0,80,10
 1160               		.stabn	192,0,0,.LBB222-.LFBB10
 1161               		.stabn	224,0,0,.LBE222-.LFBB10
 1162               		.stabs	"y:r(0,31)",64,0,72,12
 1163               		.stabn	192,0,0,.LBB224-.LFBB10
 1164               		.stabn	224,0,0,.LBE224-.LFBB10
 1165               	.Lscope10:
 1166               		.stabs	"",36,0,0,.Lscope10-.LFBB10
 1167               		.stabd	78,0,0
 1168               		.stabs	"_ZN5tft_t5frameEjjjjhj:F(0,4)",36,0,34,_ZN5tft_t5frameEjjjjhj
 1169               		.stabs	"this:p(0,111)",160,0,35,5
 1170               		.stabs	"x:P(0,31)",64,0,34,10
 1171               		.stabs	"y:P(0,31)",64,0,34,8
 1172               		.stabs	"w:p(0,31)",160,0,34,1
 1173               		.stabs	"h:p(0,31)",160,0,34,3
 1174               		.stabs	"s:P(0,29)",64,0,35,14
 1175               		.stabs	"c:P(0,31)",64,0,35,12
 1176               	.global	_ZN5tft_t5frameEjjjjhj
 1177               		.type	_ZN5tft_t5frameEjjjjhj, @function
 1178               	_ZN5tft_t5frameEjjjjhj:
 1179               		.stabd	46,0,0
  36:tft.cpp       **** {
 1180               		.stabn	68,0,36,.LM126-.LFBB11
 1181               	.LM126:
 1182               	.LFBB11:
 1183 0302 2F92      		push r2
 1184 0304 3F92      		push r3
 1185 0306 4F92      		push r4
 1186 0308 5F92      		push r5
 1187 030a 6F92      		push r6
 1188 030c 7F92      		push r7
 1189 030e 8F92      		push r8
 1190 0310 9F92      		push r9
 1191 0312 AF92      		push r10
 1192 0314 BF92      		push r11
 1193 0316 CF92      		push r12
 1194 0318 DF92      		push r13
 1195 031a EF92      		push r14
GAS LISTING /tmp/ccHDklfR.s 			page 33


 1196 031c FF92      		push r15
 1197 031e 0F93      		push r16
 1198 0320 1F93      		push r17
 1199 0322 CF93      		push r28
 1200 0324 DF93      		push r29
 1201 0326 00D0      		rcall .
 1202 0328 00D0      		rcall .
 1203 032a 00D0      		rcall .
 1204 032c CDB7      		in r28,__SP_L__
 1205 032e DEB7      		in r29,__SP_H__
 1206               	/* prologue: function */
 1207               	/* frame size = 6 */
 1208               	/* stack size = 24 */
 1209               	.L__stack_usage = 24
 1210 0330 9E83      		std Y+6,r25
 1211 0332 8D83      		std Y+5,r24
 1212 0334 5B01      		movw r10,r22
 1213 0336 4A01      		movw r8,r20
 1214 0338 3A83      		std Y+2,r19
 1215 033a 2983      		std Y+1,r18
 1216 033c 1C83      		std Y+4,r17
 1217 033e 0B83      		std Y+3,r16
  37:tft.cpp       **** 	rectangle(x, y, w - s, s, c);
 1218               		.stabn	68,0,37,.LM127-.LFBB11
 1219               	.LM127:
 1220 0340 6E2C      		mov r6,r14
 1221 0342 712C      		mov r7,__zero_reg__
 1222 0344 1901      		movw r2,r18
 1223 0346 2618      		sub r2,r6
 1224 0348 3708      		sbc r3,r7
 1225 034a 7601      		movw r14,r12
 1226 034c 8301      		movw r16,r6
 1227 034e 9101      		movw r18,r2
 1228 0350 0E94 0000 		call _ZN5tft_t9rectangleEjjjjj
  38:tft.cpp       **** 	rectangle(x + w - s, y, s, h - s, c);
 1229               		.stabn	68,0,38,.LM128-.LFBB11
 1230               	.LM128:
 1231 0354 4B80      		ldd r4,Y+3
 1232 0356 5C80      		ldd r5,Y+4
 1233 0358 4618      		sub r4,r6
 1234 035a 5708      		sbc r5,r7
 1235 035c 6981      		ldd r22,Y+1
 1236 035e 7A81      		ldd r23,Y+2
 1237 0360 6A0D      		add r22,r10
 1238 0362 7B1D      		adc r23,r11
 1239 0364 6619      		sub r22,r6
 1240 0366 7709      		sbc r23,r7
 1241 0368 8201      		movw r16,r4
 1242 036a 9301      		movw r18,r6
 1243 036c A401      		movw r20,r8
 1244 036e 8D81      		ldd r24,Y+5
 1245 0370 9E81      		ldd r25,Y+6
 1246 0372 0E94 0000 		call _ZN5tft_t9rectangleEjjjjj
  39:tft.cpp       **** 	rectangle(x, y + s, s, h - s, c);
 1247               		.stabn	68,0,39,.LM129-.LFBB11
 1248               	.LM129:
 1249 0376 A301      		movw r20,r6
GAS LISTING /tmp/ccHDklfR.s 			page 34


 1250 0378 480D      		add r20,r8
 1251 037a 591D      		adc r21,r9
 1252 037c 9301      		movw r18,r6
 1253 037e B501      		movw r22,r10
 1254 0380 8D81      		ldd r24,Y+5
 1255 0382 9E81      		ldd r25,Y+6
 1256 0384 0E94 0000 		call _ZN5tft_t9rectangleEjjjjj
  40:tft.cpp       **** 	rectangle(x + s, y + h - s, w - s, s, c);
 1257               		.stabn	68,0,40,.LM130-.LFBB11
 1258               	.LM130:
 1259 0388 4B81      		ldd r20,Y+3
 1260 038a 5C81      		ldd r21,Y+4
 1261 038c 480D      		add r20,r8
 1262 038e 591D      		adc r21,r9
 1263 0390 4619      		sub r20,r6
 1264 0392 5709      		sbc r21,r7
 1265 0394 B301      		movw r22,r6
 1266 0396 6A0D      		add r22,r10
 1267 0398 7B1D      		adc r23,r11
 1268 039a 8301      		movw r16,r6
 1269 039c 9101      		movw r18,r2
 1270 039e 8D81      		ldd r24,Y+5
 1271 03a0 9E81      		ldd r25,Y+6
 1272 03a2 0E94 0000 		call _ZN5tft_t9rectangleEjjjjj
 1273               	/* epilogue start */
  41:tft.cpp       **** }
 1274               		.stabn	68,0,41,.LM131-.LFBB11
 1275               	.LM131:
 1276 03a6 2696      		adiw r28,6
 1277 03a8 0FB6      		in __tmp_reg__,__SREG__
 1278 03aa F894      		cli
 1279 03ac DEBF      		out __SP_H__,r29
 1280 03ae 0FBE      		out __SREG__,__tmp_reg__
 1281 03b0 CDBF      		out __SP_L__,r28
 1282 03b2 DF91      		pop r29
 1283 03b4 CF91      		pop r28
 1284 03b6 1F91      		pop r17
 1285 03b8 0F91      		pop r16
 1286 03ba FF90      		pop r15
 1287 03bc EF90      		pop r14
 1288 03be DF90      		pop r13
 1289 03c0 CF90      		pop r12
 1290 03c2 BF90      		pop r11
 1291 03c4 AF90      		pop r10
 1292 03c6 9F90      		pop r9
 1293 03c8 8F90      		pop r8
 1294 03ca 7F90      		pop r7
 1295 03cc 6F90      		pop r6
 1296 03ce 5F90      		pop r5
 1297 03d0 4F90      		pop r4
 1298 03d2 3F90      		pop r3
 1299 03d4 2F90      		pop r2
 1300 03d6 0895      		ret
 1301               		.size	_ZN5tft_t5frameEjjjjhj, .-_ZN5tft_t5frameEjjjjhj
 1302               	.Lscope11:
 1303               		.stabs	"",36,0,0,.Lscope11-.LFBB11
 1304               		.stabd	78,0,0
GAS LISTING /tmp/ccHDklfR.s 			page 35


 1305               		.stabs	"_ZN5tft_t5putchEc:F(0,4)",36,0,98,_ZN5tft_t5putchEc
 1306               		.stabs	"this:P(0,111)",64,0,98,28
 1307               		.stabs	"ch:P(0,17)",64,0,98,16
 1308               	.global	_ZN5tft_t5putchEc
 1309               		.type	_ZN5tft_t5putchEc, @function
 1310               	_ZN5tft_t5putchEc:
 1311               		.stabd	46,0,0
  99:tft.cpp       **** {
 1312               		.stabn	68,0,99,.LM132-.LFBB12
 1313               	.LM132:
 1314               	.LFBB12:
 1315 03d8 DF92      		push r13
 1316 03da EF92      		push r14
 1317 03dc FF92      		push r15
 1318 03de 0F93      		push r16
 1319 03e0 1F93      		push r17
 1320 03e2 CF93      		push r28
 1321 03e4 DF93      		push r29
 1322               	/* prologue: function */
 1323               	/* frame size = 0 */
 1324               	/* stack size = 7 */
 1325               	.L__stack_usage = 7
 1326 03e6 EC01      		movw r28,r24
 1327 03e8 062F      		mov r16,r22
 1328               	.LBB227:
 1329               	.LBB228:
 1330               		.stabn	68,0,134,.LM133-.LFBB12
 1331               	.LM133:
 1332 03ea 4881      		ld r20,Y
 1333               	.LBE228:
 100:tft.cpp       **** 	area(x(), y(), WIDTH * zoom(), HEIGHT * zoom());
 1334               		.stabn	68,0,100,.LM134-.LFBB12
 1335               	.LM134:
 1336 03ec 88E0      		ldi r24,lo8(8)
 1337 03ee 489F      		mul r20,r24
 1338 03f0 9001      		movw r18,r0
 1339 03f2 1124      		clr __zero_reg__
 1340 03f4 86E0      		ldi r24,lo8(6)
 1341 03f6 489F      		mul r20,r24
 1342 03f8 A001      		movw r20,r0
 1343 03fa 1124      		clr __zero_reg__
 1344 03fc 6D81      		ldd r22,Y+5
 1345 03fe 7E81      		ldd r23,Y+6
 1346 0400 8B81      		ldd r24,Y+3
 1347 0402 9C81      		ldd r25,Y+4
 1348 0404 0E94 0000 		call _ZN5tft_t4areaEjjjj.isra.16
 101:tft.cpp       **** 	cmd(0x2C);			// Memory Write
 1349               		.stabn	68,0,101,.LM135-.LFBB12
 1350               	.LM135:
 1351 0408 8CE2      		ldi r24,lo8(44)
 1352 040a 0E94 0000 		call _ZN7ili93413cmdEh
 1353               	.LBB234:
 102:tft.cpp       **** 	for (uint8_t i = 0; i < HEIGHT * zoom(); i++) {
 1354               		.stabn	68,0,102,.LM136-.LFBB12
 1355               	.LM136:
 1356 040e F12C      		mov r15,__zero_reg__
 1357               	.LBB229:
GAS LISTING /tmp/ccHDklfR.s 			page 36


 1358               	.LBB230:
 104:tft.cpp       **** 		c = pgm_read_byte(&(ascii[ch - ' '][i / zoom()]));
 1359               		.stabn	68,0,104,.LM137-.LFBB12
 1360               	.LM137:
 1361 0410 10E0      		ldi r17,0
 1362 0412 0052      		subi r16,32
 1363 0414 1109      		sbc r17,__zero_reg__
 1364 0416 83E0      		ldi r24,3
 1365               		1:
 1366 0418 000F      		lsl r16
 1367 041a 111F      		rol r17
 1368 041c 8A95      		dec r24
 1369 041e 01F4      		brne 1b
 1370               	.LBE230:
 1371               	.LBE229:
 102:tft.cpp       **** 	for (uint8_t i = 0; i < HEIGHT * zoom(); i++) {
 1372               		.stabn	68,0,102,.LM138-.LFBB12
 1373               	.LM138:
 1374 0420 00C0      		rjmp .L47
 1375               	.L53:
 1376               	.LBB233:
 1377               	.LBB231:
 104:tft.cpp       **** 		c = pgm_read_byte(&(ascii[ch - ' '][i / zoom()]));
 1378               		.stabn	68,0,104,.LM139-.LFBB12
 1379               	.LM139:
 1380 0422 8F2D      		mov r24,r15
 1381 0424 0E94 0000 		call __udivmodqi4
 1382 0428 F801      		movw r30,r16
 1383 042a E80F      		add r30,r24
 1384 042c F11D      		adc r31,__zero_reg__
 1385 042e E050      		subi r30,lo8(-(ascii))
 1386 0430 F040      		sbci r31,hi8(-(ascii))
 1387               	/* #APP */
 1388               	 ;  104 "tft.cpp" 1
 1389 0432 D490      		lpm r13, Z
 1390               		
 1391               	 ;  0 "" 2
 1392               	/* #NOAPP */
 1393               	.LBE231:
 1394               	.LBB232:
 105:tft.cpp       **** 		for (uint8_t j = 0; j < WIDTH * zoom(); j++) {
 1395               		.stabn	68,0,105,.LM140-.LFBB12
 1396               	.LM140:
 1397 0434 E12C      		mov r14,__zero_reg__
 1398 0436 00C0      		rjmp .L48
 1399               	.L52:
 106:tft.cpp       **** 			if (c & 0x80) {
 1400               		.stabn	68,0,106,.LM141-.LFBB12
 1401               	.LM141:
 1402 0438 D7FE      		sbrs r13,7
 1403 043a 00C0      		rjmp .L49
 107:tft.cpp       **** 				data(foreground() / 0x0100);
 1404               		.stabn	68,0,107,.LM142-.LFBB12
 1405               	.LM142:
 1406 043c 8C85      		ldd r24,Y+12
 1407 043e 0E94 0000 		call _ZN7ili93414dataEh
 108:tft.cpp       **** 				data(foreground() % 0x0100);
GAS LISTING /tmp/ccHDklfR.s 			page 37


 1408               		.stabn	68,0,108,.LM143-.LFBB12
 1409               	.LM143:
 1410 0442 8B85      		ldd r24,Y+11
 1411 0444 00C0      		rjmp .L54
 1412               	.L49:
 110:tft.cpp       **** 				data(background() / 0x0100);
 1413               		.stabn	68,0,110,.LM144-.LFBB12
 1414               	.LM144:
 1415 0446 8E85      		ldd r24,Y+14
 1416 0448 0E94 0000 		call _ZN7ili93414dataEh
 111:tft.cpp       **** 				data(background() % 0x0100);
 1417               		.stabn	68,0,111,.LM145-.LFBB12
 1418               	.LM145:
 1419 044c 8D85      		ldd r24,Y+13
 1420               	.L54:
 1421 044e 0E94 0000 		call _ZN7ili93414dataEh
 1422               		.stabn	68,0,134,.LM146-.LFBB12
 1423               	.LM146:
 1424 0452 4881      		ld r20,Y
 113:tft.cpp       **** 			if (j % zoom() == zoom() - 1)
 1425               		.stabn	68,0,113,.LM147-.LFBB12
 1426               	.LM147:
 1427 0454 8E2D      		mov r24,r14
 1428 0456 642F      		mov r22,r20
 1429 0458 0E94 0000 		call __udivmodqi4
 1430 045c 292F      		mov r18,r25
 1431 045e 30E0      		ldi r19,0
 1432 0460 642F      		mov r22,r20
 1433 0462 70E0      		ldi r23,0
 1434 0464 6150      		subi r22,1
 1435 0466 7109      		sbc r23,__zero_reg__
 1436 0468 2617      		cp r18,r22
 1437 046a 3707      		cpc r19,r23
 1438 046c 01F4      		brne .L51
 114:tft.cpp       **** 				c <<= 1;
 1439               		.stabn	68,0,114,.LM148-.LFBB12
 1440               	.LM148:
 1441 046e DD0C      		lsl r13
 1442               	.L51:
 105:tft.cpp       **** 		for (uint8_t j = 0; j < WIDTH * zoom(); j++) {
 1443               		.stabn	68,0,105,.LM149-.LFBB12
 1444               	.LM149:
 1445 0470 E394      		inc r14
 1446               	.L48:
 1447               		.stabn	68,0,134,.LM150-.LFBB12
 1448               	.LM150:
 1449 0472 2881      		ld r18,Y
 105:tft.cpp       **** 		for (uint8_t j = 0; j < WIDTH * zoom(); j++) {
 1450               		.stabn	68,0,105,.LM151-.LFBB12
 1451               	.LM151:
 1452 0474 4E2D      		mov r20,r14
 1453 0476 50E0      		ldi r21,0
 1454 0478 86E0      		ldi r24,lo8(6)
 1455 047a 289F      		mul r18,r24
 1456 047c 9001      		movw r18,r0
 1457 047e 1124      		clr __zero_reg__
 1458 0480 4217      		cp r20,r18
GAS LISTING /tmp/ccHDklfR.s 			page 38


 1459 0482 5307      		cpc r21,r19
 1460 0484 04F0      		brlt .L52
 1461               	.LBE232:
 1462               	.LBE233:
 102:tft.cpp       **** 	for (uint8_t i = 0; i < HEIGHT * zoom(); i++) {
 1463               		.stabn	68,0,102,.LM152-.LFBB12
 1464               	.LM152:
 1465 0486 F394      		inc r15
 1466               	.L47:
 1467               		.stabn	68,0,134,.LM153-.LFBB12
 1468               	.LM153:
 1469 0488 6881      		ld r22,Y
 102:tft.cpp       **** 	for (uint8_t i = 0; i < HEIGHT * zoom(); i++) {
 1470               		.stabn	68,0,102,.LM154-.LFBB12
 1471               	.LM154:
 1472 048a 4F2D      		mov r20,r15
 1473 048c 50E0      		ldi r21,0
 1474 048e 88E0      		ldi r24,lo8(8)
 1475 0490 689F      		mul r22,r24
 1476 0492 9001      		movw r18,r0
 1477 0494 1124      		clr __zero_reg__
 1478 0496 4217      		cp r20,r18
 1479 0498 5307      		cpc r21,r19
 1480 049a 04F4      		brge .+2
 1481 049c 00C0      		rjmp .L53
 1482               	/* epilogue start */
 1483               	.LBE234:
 1484               	.LBE227:
 117:tft.cpp       **** }
 1485               		.stabn	68,0,117,.LM155-.LFBB12
 1486               	.LM155:
 1487 049e DF91      		pop r29
 1488 04a0 CF91      		pop r28
 1489 04a2 1F91      		pop r17
 1490 04a4 0F91      		pop r16
 1491 04a6 FF90      		pop r15
 1492 04a8 EF90      		pop r14
 1493 04aa DF90      		pop r13
 1494 04ac 0895      		ret
 1495               		.size	_ZN5tft_t5putchEc, .-_ZN5tft_t5putchEc
 1496               		.stabs	"i:r(0,29)",64,0,102,15
 1497               		.stabn	192,0,0,.LBB228-.LFBB12
 1498               		.stabs	"c:r(0,13)",64,0,103,13
 1499               		.stabn	192,0,0,.LBB229-.LFBB12
 1500               		.stabs	"j:r(0,29)",64,0,105,14
 1501               		.stabn	192,0,0,.LBB232-.LFBB12
 1502               		.stabn	224,0,0,.LBE232-.LFBB12
 1503               		.stabn	224,0,0,.LBE229-.LFBB12
 1504               		.stabs	"c:r(0,13)",64,0,103,13
 1505               		.stabn	192,0,0,.LBB233-.LFBB12
 1506               		.stabn	224,0,0,.LBE233-.LFBB12
 1507               		.stabn	224,0,0,.LBE228-.LFBB12
 1508               		.stabs	"i:r(0,29)",64,0,102,15
 1509               		.stabn	192,0,0,.LBB234-.LFBB12
 1510               		.stabn	224,0,0,.LBE234-.LFBB12
 1511               	.Lscope12:
 1512               		.stabs	"",36,0,0,.Lscope12-.LFBB12
GAS LISTING /tmp/ccHDklfR.s 			page 39


 1513               		.stabd	78,0,0
 1514               		.section	.text._Z8tftputchcP6__file,"axG",@progbits,_Z8tftputchcP6__file,comdat
 1515               		.stabs	"_Z8tftputchcP6__file:F(0,9)",36,0,121,_Z8tftputchcP6__file
 1516               		.stabs	"c:P(0,90)",64,0,121,24
 1517               		.stabs	"stream:P(0,112)=*(0,69)",64,0,121,22
 1518               		.weak	_Z8tftputchcP6__file
 1519               		.type	_Z8tftputchcP6__file, @function
 1520               	_Z8tftputchcP6__file:
 1521               		.stabd	46,0,0
 122:tft.cpp       **** {
 1522               		.stabn	68,0,122,.LM156-.LFBB13
 1523               	.LM156:
 1524               	.LFBB13:
 1525 0000 CF93      		push r28
 1526 0002 DF93      		push r29
 1527               	/* prologue: function */
 1528               	/* frame size = 0 */
 1529               	/* stack size = 2 */
 1530               	.L__stack_usage = 2
 123:tft.cpp       **** 	(*tft) << c;
 1531               		.stabn	68,0,123,.LM157-.LFBB13
 1532               	.LM157:
 1533 0004 C091 0000 		lds r28,_ZL3tft
 1534 0008 D091 0000 		lds r29,_ZL3tft+1
 1535               	.LBB257:
 1536               	.LBB258:
 1537               		.stabs	"tft.h",132,0,0,.Ltext16
 1538               	.Ltext16:
 230:tft.h         **** 	switch (c) {
 1539               		.stabn	68,0,230,.LM158-.LFBB13
 1540               	.LM158:
 1541 000c 8930      		cpi r24,lo8(9)
 1542 000e 01F0      		breq .L57
 1543 0010 8A30      		cpi r24,lo8(10)
 1544 0012 01F4      		brne .L68
 232:tft.h         **** 		newline();
 1545               		.stabn	68,0,232,.LM159-.LFBB13
 1546               	.LM159:
 1547 0014 CE01      		movw r24,r28
 1548 0016 0E94 0000 		call _ZN5tft_t7newlineEv
 1549 001a 00C0      		rjmp .L59
 1550               	.L57:
 1551               	.LBB259:
 1552               		.stabs	"tft.cpp",132,0,0,.Ltext17
 1553               	.Ltext17:
 1554               		.stabn	68,0,134,.LM160-.LFBB13
 1555               	.LM160:
 1556 001c 2B81      		ldd r18,Y+3
 1557 001e 3C81      		ldd r19,Y+4
 1558 0020 6881      		ld r22,Y
 1559               	.LBB260:
 1560               		.stabs	"tft.h",132,0,0,.Ltext18
 1561               	.Ltext18:
 326:tft.h         **** }
 327:tft.h         **** 
 328:tft.h         **** inline void tft_t::tab(void)
 329:tft.h         **** {
GAS LISTING /tmp/ccHDklfR.s 			page 40


 330:tft.h         **** 	if (x() % (WIDTH * zoom()))
 1562               		.stabn	68,0,330,.LM161-.LFBB13
 1563               	.LM161:
 1564 0022 86E0      		ldi r24,lo8(6)
 1565 0024 689F      		mul r22,r24
 1566 0026 B001      		movw r22,r0
 1567 0028 1124      		clr __zero_reg__
 1568 002a C901      		movw r24,r18
 1569 002c 0E94 0000 		call __udivmodhi4
 1570 0030 0097      		sbiw r24,0
 1571 0032 01F0      		breq .L65
 331:tft.h         **** 		setX(x() - x() % (WIDTH * zoom()));
 1572               		.stabn	68,0,331,.LM162-.LFBB13
 1573               	.LM162:
 1574 0034 281B      		sub r18,r24
 1575 0036 390B      		sbc r19,r25
 1576               	.LBB261:
 1577               	.LBB262:
  32:tft.h         **** 	inline void setX(uint16_t x) {d.x = x;}
 1578               		.stabn	68,0,32,.LM163-.LFBB13
 1579               	.LM163:
 1580 0038 3C83      		std Y+4,r19
 1581 003a 2B83      		std Y+3,r18
 1582               	.L65:
 1583               	.LBE262:
 1584               	.LBE261:
 332:tft.h         **** 	do
 333:tft.h         **** 		next();
 1585               		.stabn	68,0,333,.LM164-.LFBB13
 1586               	.LM164:
 1587 003c CE01      		movw r24,r28
 1588 003e 0E94 0000 		call _ZN5tft_t4nextEv
 1589               	.LBE260:
 1590               		.stabs	"tft.cpp",132,0,0,.Ltext19
 1591               	.Ltext19:
 1592               		.stabn	68,0,134,.LM165-.LFBB13
 1593               	.LM165:
 1594 0042 6881      		ld r22,Y
 1595               	.LBB263:
 1596               		.stabs	"tft.h",132,0,0,.Ltext20
 1597               	.Ltext20:
 332:tft.h         **** 	do
 1598               		.stabn	68,0,332,.LM166-.LFBB13
 1599               	.LM166:
 1600 0044 86E0      		ldi r24,lo8(6)
 1601 0046 689F      		mul r22,r24
 1602 0048 B001      		movw r22,r0
 1603 004a 1124      		clr __zero_reg__
 1604 004c 8B81      		ldd r24,Y+3
 1605 004e 9C81      		ldd r25,Y+4
 1606 0050 0E94 0000 		call __udivmodhi4
 1607 0054 CB01      		movw r24,r22
 1608 0056 6A81      		ldd r22,Y+2
 1609 0058 70E0      		ldi r23,0
 1610 005a 0E94 0000 		call __udivmodhi4
 1611 005e 892B      		or r24,r25
 1612 0060 01F4      		brne .L65
GAS LISTING /tmp/ccHDklfR.s 			page 41


 1613 0062 00C0      		rjmp .L59
 1614               	.L68:
 1615               	.LBE263:
 1616               	.LBE259:
 238:tft.h         **** 		if ((unsigned)c < ' ' || (unsigned)c > 127)
 1617               		.stabn	68,0,238,.LM167-.LFBB13
 1618               	.LM167:
 1619 0064 982F      		mov r25,r24
 1620 0066 9052      		subi r25,lo8(-(-32))
 1621 0068 9036      		cpi r25,lo8(96)
 1622 006a 00F4      		brsh .L59
 240:tft.h         **** 		putch(c);
 1623               		.stabn	68,0,240,.LM168-.LFBB13
 1624               	.LM168:
 1625 006c 682F      		mov r22,r24
 1626 006e CE01      		movw r24,r28
 1627 0070 0E94 0000 		call _ZN5tft_t5putchEc
 241:tft.h         **** 		next();
 1628               		.stabn	68,0,241,.LM169-.LFBB13
 1629               	.LM169:
 1630 0074 CE01      		movw r24,r28
 1631 0076 0E94 0000 		call _ZN5tft_t4nextEv
 1632               	.L59:
 1633               	.LBE258:
 1634               	.LBE257:
 1635               		.stabs	"tft.cpp",132,0,0,.Ltext21
 1636               	.Ltext21:
 125:tft.cpp       **** }
 1637               		.stabn	68,0,125,.LM170-.LFBB13
 1638               	.LM170:
 1639 007a 80E0      		ldi r24,0
 1640 007c 90E0      		ldi r25,0
 1641               	/* epilogue start */
 1642 007e DF91      		pop r29
 1643 0080 CF91      		pop r28
 1644 0082 0895      		ret
 1645               		.size	_Z8tftputchcP6__file, .-_Z8tftputchcP6__file
 1646               	.Lscope13:
 1647               		.stabs	"",36,0,0,.Lscope13-.LFBB13
 1648               		.stabd	78,0,0
 1649               		.text
 1650               		.stabs	"_Z6tftoutP5tft_t:F(0,112)",36,0,127,_Z6tftoutP5tft_t
 1651               		.stabs	"hw:P(0,84)",64,0,127,24
 1652               	.global	_Z6tftoutP5tft_t
 1653               		.type	_Z6tftoutP5tft_t, @function
 1654               	_Z6tftoutP5tft_t:
 1655               		.stabd	46,0,0
 128:tft.cpp       **** {
 1656               		.stabn	68,0,128,.LM171-.LFBB14
 1657               	.LM171:
 1658               	.LFBB14:
 1659               	/* prologue: function */
 1660               	/* frame size = 0 */
 1661               	/* stack size = 0 */
 1662               	.L__stack_usage = 0
 1663               	.LBB264:
 130:tft.cpp       **** 	tft = hw;
GAS LISTING /tmp/ccHDklfR.s 			page 42


 1664               		.stabn	68,0,130,.LM172-.LFBB14
 1665               	.LM172:
 1666 04ae 9093 0000 		sts _ZL3tft+1,r25
 1667 04b2 8093 0000 		sts _ZL3tft,r24
 131:tft.cpp       **** 	if (out == NULL)
 1668               		.stabn	68,0,131,.LM173-.LFBB14
 1669               	.LM173:
 1670 04b6 8091 0000 		lds r24,_ZZ6tftoutP5tft_tE3out
 1671 04ba 9091 0000 		lds r25,_ZZ6tftoutP5tft_tE3out+1
 1672 04be 892B      		or r24,r25
 1673 04c0 01F4      		brne .L70
 132:tft.cpp       **** 		out = fdevopen(tftputch, NULL);
 1674               		.stabn	68,0,132,.LM174-.LFBB14
 1675               	.LM174:
 1676 04c2 60E0      		ldi r22,0
 1677 04c4 70E0      		ldi r23,0
 1678 04c6 80E0      		ldi r24,lo8(gs(_Z8tftputchcP6__file))
 1679 04c8 90E0      		ldi r25,hi8(gs(_Z8tftputchcP6__file))
 1680 04ca 0E94 0000 		call fdevopen
 1681 04ce 9093 0000 		sts _ZZ6tftoutP5tft_tE3out+1,r25
 1682 04d2 8093 0000 		sts _ZZ6tftoutP5tft_tE3out,r24
 1683               	.L70:
 1684               	.LBE264:
 1685               		.stabn	68,0,134,.LM175-.LFBB14
 1686               	.LM175:
 1687 04d6 8091 0000 		lds r24,_ZZ6tftoutP5tft_tE3out
 1688 04da 9091 0000 		lds r25,_ZZ6tftoutP5tft_tE3out+1
 1689 04de 0895      		ret
 1690               		.size	_Z6tftoutP5tft_t, .-_Z6tftoutP5tft_t
 1691               		.stabs	"out:V(0,112)",38,0,129,_ZZ6tftoutP5tft_tE3out
 1692               		.stabn	192,0,0,.LBB264-.LFBB14
 1693               		.stabn	224,0,0,.LBE264-.LFBB14
 1694               	.Lscope14:
 1695               		.stabs	"",36,0,0,.Lscope14-.LFBB14
 1696               		.stabd	78,0,0
 1697               		.local	_ZL3tft
 1698               		.comm	_ZL3tft,2,1
 1699               		.local	_ZZ6tftoutP5tft_tE3out
 1700               		.comm	_ZZ6tftoutP5tft_tE3out,2,1
 1701               		.stabs	"tft:S(0,84)",40,0,119,_ZL3tft
 1702               		.stabs	"",100,0,0,.Letext0
 1703               	.Letext0:
 1704               		.ident	"GCC: (GNU) 4.7.2"
 1705               	.global __do_clear_bss
GAS LISTING /tmp/ccHDklfR.s 			page 43


DEFINED SYMBOLS
                            *ABS*:0000000000000000 tft.cpp
     /tmp/ccHDklfR.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccHDklfR.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccHDklfR.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccHDklfR.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccHDklfR.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccHDklfR.s:92     .text._ZN7ili93413cmdEh:0000000000000000 _ZN7ili93413cmdEh
     /tmp/ccHDklfR.s:128    .text._ZN7ili93414dataEh:0000000000000000 _ZN7ili93414dataEh
     /tmp/ccHDklfR.s:158    .text:0000000000000000 _ZN5tft_t4areaEjjjj.isra.16
     /tmp/ccHDklfR.s:257    .text:0000000000000082 _ZN5tft_t5pointEjjj.isra.17
     /tmp/ccHDklfR.s:304    .text._ZN5tft_t4fillEj:0000000000000000 _ZN5tft_t4fillEj
     /tmp/ccHDklfR.s:458    .text._ZN5tft_t7newlineEv:0000000000000000 _ZN5tft_t7newlineEv
     /tmp/ccHDklfR.s:546    .text._ZN5tft_t4nextEv:0000000000000000 _ZN5tft_t4nextEv
     /tmp/ccHDklfR.s:605    .text:00000000000000aa _ZN5tft_tC2Ev
     /tmp/ccHDklfR.s:605    .text:00000000000000aa _ZN5tft_tC1Ev
     /tmp/ccHDklfR.s:713    .text:00000000000000dc _ZN5tft_t9rectangleEjjjjj
     /tmp/ccHDklfR.s:804    .text:0000000000000138 _ZN5tft_t4lineEjjjjj
     /tmp/ccHDklfR.s:1178   .text:0000000000000302 _ZN5tft_t5frameEjjjjhj
     /tmp/ccHDklfR.s:1310   .text:00000000000003d8 _ZN5tft_t5putchEc
     /tmp/ccHDklfR.s:1520   .text._Z8tftputchcP6__file:0000000000000000 _Z8tftputchcP6__file
                             .bss:0000000000000000 _ZL3tft
     /tmp/ccHDklfR.s:1654   .text:00000000000004ae _Z6tftoutP5tft_t
     /tmp/ccHDklfR.s:1698   .bss:0000000000000002 _ZZ6tftoutP5tft_tE3out

UNDEFINED SYMBOLS
__udivmodhi4
__udivmodqi4
ascii
fdevopen
__do_clear_bss
